{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://petstore.swagger.io/v1"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "summary": "List all pets",
        "operationId": "listPets",
        "tags": [
          "pets"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of pets",
            "headers": {
              "x-next": {
                "description": "A link to the next page of responses",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pets"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.pets.listPets({\n    limit: 81,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.pets.list_pets(limit=81)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/pets\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := pets.ListPetsRequestParams{}\n\n\nresponse, err := client.Pets.ListPets(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ListPetsParameters;\nimport com.swagger.petstore.models.Pet;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    ListPetsParameters requestParameters = ListPetsParameters.builder().limit(81L).build();\n\n    List<Pet> response = testSdk.pets.listPets(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "post": {
        "summary": "Create a pet",
        "operationId": "createPets",
        "tags": [
          "pets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "source": "import { Pet, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const pet: Pet = {\n    id: 2,\n    name: 'name',\n    tag: 'tag',\n  };\n\n  const { data } = await testSdk.pets.createPets(pet);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import Pet\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = Pet(\n    id_=2,\n    name=\"name\",\n    tag=\"tag\"\n)\n\nresult = sdk.pets.create_pets(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/pets\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := pets.Pet{}\nrequest.SetId(int64(123))\nrequest.SetName(\"Name\")\nrequest.SetTag(\"Tag\")\n\nresponse, err := client.Pets.CreatePets(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.Pet;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    Pet pet = Pet.builder().id(2L).name(\"name\").tag(\"tag\").build();\n\n    testSdk.pets.createPets(pet);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/pets/{petId}": {
      "get": {
        "summary": "Info for a specific pet",
        "operationId": "showPetById",
        "tags": [
          "pets"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "The id of the pet to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.pets.showPetById('petId');\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.pets.show_pet_by_id(pet_id=\"petId\")\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Pets.ShowPetById(context.Background(), \"petId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.Pet;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    Pet response = testSdk.pets.showPetById(\"petId\");\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Pets": {
        "type": "array",
        "maxItems": 100,
        "items": {
          "$ref": "#/components/schemas/Pet"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}