{
  "openapi": "3.0.0",
  "paths": {
    "/builds": {
      "post": {
        "operationId": "createBuild",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateBuildRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created build",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateBuildRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n\ttoken: 'YOUR_TOKEN'});\n\n  const createBuildRequestLanguages = \"java\"\n\nconst auth = \"apikey\"\n\nconst createBuildRequestDocs = \"enhancedApiSpec\"\n\nconst deliveryMethods = \"files\"\n\nconst createBuildRequestBuildType = \"SNIPPETS\"\n\nconst createBuildRequest: CreateBuildRequest = {\n  apiId: 1,\n  baseUrl: \"https://api-dev.liblab.com\",\n  sdkName: \"liblab\",\n  sdkVersion: \"1.0.0\",\n  languages: [createBuildRequestLanguages],\n  auth: [auth],\n  docs: [createBuildRequestDocs],\n  hooks: new ArrayBuffer(0),\n  customQueries: new ArrayBuffer(0),\n  liblabVersion: \"2\",\n  deliveryMethods: [deliveryMethods],\n  buildType: [createBuildRequestBuildType],\n  params: \"{\"auth\":[\"bearer\"],\"pypiPackageName\":\"liblab_py\",\"groupId\":\"liblabJavaGroupId\",\"retry\":{\"enabled\":true,\"maxAttempts\":3,\"retryDelay\":5},\"licensePath\":\"https://api-dev.liblab.com/license\",\"license\":{\"type\":\"MIT\",\"name\":\"my-license\",\"url\":\"https://api-dev.liblab.com/license\"},\"refreshToken\":{\"endpoint\":\"/auth/refresh-token\",\"bearerKey\":\"accessToken\",\"refreshKey\":\"refreshToken\"},\"hookDependencies\":[{\"name\":\"hookDependency\",\"version\":\"1.0.0\",\"groupId\":\"liblab\"}],\"injectedModels\":[\"DontInjectThisModel\"],\"ignoreFiles\":[\"README.md\"]}\",\n  rawConfig: \"rawConfig\"\n};\n\n  const { data } = await testSdk.build.createBuild(\n  createBuildRequest\n);\n\n  console.log(data);\n})();\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/build\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateBuildRequestLanguages := build.CREATE_BUILD_REQUEST_LANGUAGES_JAVA\n\nauth := build.AUTH_APIKEY\n\ncreateBuildRequestDocs := build.CREATE_BUILD_REQUEST_DOCS_ENHANCED_API_SPEC\n\ndeliveryMethods := build.DELIVERY_METHODS_FILES\n\ncreateBuildRequestBuildType := build.CREATE_BUILD_REQUEST_BUILD_TYPE_SNIPPETS\n\nrequest := build.CreateBuildRequest{}\nrequest.SetApiId(float64(123))\nrequest.SetBaseUrl(\"BaseUrl\")\nrequest.SetSdkName(\"SdkName\")\nrequest.SetSdkVersion(\"SdkVersion\")\nrequest.SetLanguages([]build.CreateBuildRequestLanguages{createBuildRequestLanguages})\nrequest.SetAuth([]build.Auth{auth})\nrequest.SetDocs([]build.CreateBuildRequestDocs{createBuildRequestDocs})\nrequest.SetHooks(\"\")\nrequest.SetCustomQueries(\"\")\nrequest.SetLiblabVersion(\"LiblabVersion\")\nrequest.SetDeliveryMethods([]build.DeliveryMethods{deliveryMethods})\nrequest.SetBuildType([]build.CreateBuildRequestBuildType{createBuildRequestBuildType})\nrequest.SetParams(\"Params\")\nrequest.SetRawConfig(\"RawConfig\")\n\nresponse, err := client.Build.CreateBuild(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateBuildRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateBuildRequest(\n    api_id=1,\n    base_url=\"https://api-dev.liblab.com\",\n    sdk_name=\"liblab\",\n    sdk_version=\"1.0.0\",\n    languages=[\n        \"java\"\n    ],\n    auth=[\n        \"apikey\"\n    ],\n    docs=[\n        \"enhancedApiSpec\"\n    ],\n    hooks=\"hooks\",\n    custom_queries=\"customQueries\",\n    liblab_version=\"2\",\n    delivery_methods=[\n        \"files\"\n    ],\n    build_type=[\n        \"SNIPPETS\"\n    ],\n    params=\"{\\\"auth\\\":[\\\"bearer\\\"],\\\"pypiPackageName\\\":\\\"liblab_py\\\",\\\"groupId\\\":\\\"liblabJavaGroupId\\\",\\\"retry\\\":{\\\"enabled\\\":true,\\\"maxAttempts\\\":3,\\\"retryDelay\\\":5},\\\"licensePath\\\":\\\"https://api-dev.liblab.com/license\\\",\\\"license\\\":{\\\"type\\\":\\\"MIT\\\",\\\"name\\\":\\\"my-license\\\",\\\"url\\\":\\\"https://api-dev.liblab.com/license\\\"},\\\"refreshToken\\\":{\\\"endpoint\\\":\\\"/auth/refresh-token\\\",\\\"bearerKey\\\":\\\"accessToken\\\",\\\"refreshKey\\\":\\\"refreshToken\\\"},\\\"hookDependencies\\\":[{\\\"name\\\":\\\"hookDependency\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"groupId\\\":\\\"liblab\\\"}],\\\"injectedModels\\\":[\\\"DontInjectThisModel\\\"],\\\"ignoreFiles\\\":[\\\"README.md\\\"]}\",\n    raw_config=\"rawConfig\"\n)\n\nresult = sdk.build.create_build(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.Auth;\nimport com.swagger.petstore.models.BuildResponse;\nimport com.swagger.petstore.models.CreateBuildRequest;\nimport com.swagger.petstore.models.CreateBuildRequestBuildType;\nimport com.swagger.petstore.models.CreateBuildRequestDocs;\nimport com.swagger.petstore.models.CreateBuildRequestLanguages;\nimport com.swagger.petstore.models.DeliveryMethods;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tTestSdkConfig config = TestSdkConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tTestSdk testSdk = new TestSdk(config);\n\n\t\tList<CreateBuildRequestLanguages> languages = Arrays.asList(CreateBuildRequestLanguages.JAVA);\n\n\t\tList<Auth> auth = Arrays.asList(Auth.APIKEY);\n\n\t\tList<CreateBuildRequestDocs> docs = Arrays.asList(CreateBuildRequestDocs.ENHANCEDAPISPEC);\n\n\t\tList<DeliveryMethods> deliveryMethods = Arrays.asList(DeliveryMethods.FILES);\n\n\t\tList<CreateBuildRequestBuildType> buildType = Arrays.asList(CreateBuildRequestBuildType.SNIPPETS);\n\n\t\tCreateBuildRequest createBuildRequest = CreateBuildRequest.builder()\n\t\t\t.apiId(1D)\n\t\t\t.baseUrl(\"https://api-dev.liblab.com\")\n\t\t\t.sdkName(\"liblab\")\n\t\t\t.sdkVersion(\"1.0.0\")\n\t\t\t.languages(languages)\n\t\t\t.auth(auth)\n\t\t\t.docs(docs)\n\t\t\t.hooks(hooks)\n\t\t\t.customQueries(customQueries)\n\t\t\t.liblabVersion(\"2\")\n\t\t\t.deliveryMethods(deliveryMethods)\n\t\t\t.buildType(buildType)\n\t\t\t.params(\"{\"auth\":[\"bearer\"],\"pypiPackageName\":\"liblab_py\",\"groupId\":\"liblabJavaGroupId\",\"retry\":{\"enabled\":true,\"maxAttempts\":3,\"retryDelay\":5},\"licensePath\":\"https://api-dev.liblab.com/license\",\"license\":{\"type\":\"MIT\",\"name\":\"my-license\",\"url\":\"https://api-dev.liblab.com/license\"},\"refreshToken\":{\"endpoint\":\"/auth/refresh-token\",\"bearerKey\":\"accessToken\",\"refreshKey\":\"refreshToken\"},\"hookDependencies\":[{\"name\":\"hookDependency\",\"version\":\"1.0.0\",\"groupId\":\"liblab\"}],\"injectedModels\":[\"DontInjectThisModel\"],\"ignoreFiles\":[\"README.md\"]}\")\n\t\t\t.rawConfig(\"rawConfig\")\n\t\t\t.build();\n\n\t\tBuildResponse response = testSdk.build.createBuild(createBuildRequest);\n\n\t\tSystem.out.println(response);\n    }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "getBuilds",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "orgId",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "apiSlug",
            "required": true,
            "in": "query",
            "schema": {
              "example": "my-api",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Builds by org id and api slug with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBuildResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.getBuilds({\n    offset: 5.04,\n    limit: 10,\n    orgId: 1,\n    apiSlug: 'my-api',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/build\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := build.GetBuildsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\nparams.SetOrgId(float64(123))\nparams.SetApiSlug(\"string\")\n\nresponse, err := client.Build.GetBuilds(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.get_builds(\n    offset=4.27,\n    limit=10,\n    org_id=1,\n    api_slug=\"my-api\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetBuildsParameters;\nimport com.swagger.petstore.models.PaginatedBuildResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetBuildsParameters requestParameters = GetBuildsParameters\n      .builder()\n      .offset(5.04D)\n      .limit(10D)\n      .orgId(1D)\n      .apiSlug(\"my-api\")\n      .build();\n\n    PaginatedBuildResponse response = testSdk.build.getBuilds(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/simple": {
      "post": {
        "operationId": "createSimpleBuild",
        "summary": "",
        "description": "public facing build command with minimal configuration",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleBuildRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created build",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { Authentication, SimpleBuildRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const simpleBuildRequestLanguages = 'java';\n\n  const simpleBuildRequestDocs = 'enhancedApiSpec';\n\n  const accessAuth: AccessAuth = {\n    prefix: 'prefix',\n  };\n\n  const apiKeyAuth: ApiKeyAuth = {\n    header: 'header',\n  };\n\n  const basicAuth: BasicAuth = {\n    enabled: true,\n  };\n\n  const authentication: Authentication = {\n    access: accessAuth,\n    apiKey: apiKeyAuth,\n    basic: basicAuth,\n  };\n\n  const simpleBuildRequest: SimpleBuildRequest = {\n    apiId: 1,\n    baseUrl: 'https://api-dev.liblab.com',\n    sdkName: 'liblab',\n    sdkVersion: '1.0.0',\n    languages: [simpleBuildRequestLanguages],\n    docs: [simpleBuildRequestDocs],\n    liblabVersion: '2',\n    authentication: authentication,\n  };\n\n  const { data } = await testSdk.build.createSimpleBuild(simpleBuildRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/build\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nsimpleBuildRequestLanguages := build.SIMPLE_BUILD_REQUEST_LANGUAGES_JAVA\n\nsimpleBuildRequestDocs := build.SIMPLE_BUILD_REQUEST_DOCS_ENHANCED_API_SPEC\n\n\naccessAuth := build.AccessAuth{}\naccessAuth.SetPrefix(\"Prefix\")\n\n\napiKeyAuth := build.ApiKeyAuth{}\napiKeyAuth.SetHeader(\"Header\")\n\n\nbasicAuth := build.BasicAuth{}\nbasicAuth.SetEnabled(true)\n\nauthentication := build.Authentication{}\nauthentication.SetAccess(accessAuth)\nauthentication.SetApiKey(apiKeyAuth)\nauthentication.SetBasic(basicAuth)\n\nrequest := build.SimpleBuildRequest{}\nrequest.SetApiId(float64(123))\nrequest.SetBaseUrl(\"BaseUrl\")\nrequest.SetSdkName(\"SdkName\")\nrequest.SetSdkVersion(\"SdkVersion\")\nrequest.SetLanguages([]build.SimpleBuildRequestLanguages{simpleBuildRequestLanguages})\nrequest.SetDocs([]build.SimpleBuildRequestDocs{simpleBuildRequestDocs})\nrequest.SetLiblabVersion(\"LiblabVersion\")\nrequest.SetAuthentication(authentication)\n\nresponse, err := client.Build.CreateSimpleBuild(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import SimpleBuildRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = SimpleBuildRequest(\n    api_id=1,\n    base_url=\"https://api-dev.liblab.com\",\n    sdk_name=\"liblab\",\n    sdk_version=\"1.0.0\",\n    languages=[\n        \"java\"\n    ],\n    docs=[\n        \"enhancedApiSpec\"\n    ],\n    liblab_version=\"2\",\n    authentication={\n        \"access\": {\n            \"prefix\": \"prefix\"\n        },\n        \"api_key\": {\n            \"header\": \"header\"\n        },\n        \"basic\": {\n            \"enabled\": True\n        }\n    }\n)\n\nresult = sdk.build.create_simple_build(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.AccessAuth;\nimport com.swagger.petstore.models.ApiKeyAuth;\nimport com.swagger.petstore.models.Authentication;\nimport com.swagger.petstore.models.BasicAuth;\nimport com.swagger.petstore.models.BuildResponse;\nimport com.swagger.petstore.models.SimpleBuildRequest;\nimport com.swagger.petstore.models.SimpleBuildRequestDocs;\nimport com.swagger.petstore.models.SimpleBuildRequestLanguages;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<SimpleBuildRequestLanguages> languages = Arrays.asList(SimpleBuildRequestLanguages.JAVA);\n\n    List<SimpleBuildRequestDocs> docs = Arrays.asList(SimpleBuildRequestDocs.ENHANCEDAPISPEC);\n\n    AccessAuth accessAuth = AccessAuth.builder().prefix(\"prefix\").build();\n\n    ApiKeyAuth apiKeyAuth = ApiKeyAuth.builder().header(\"header\").build();\n\n    BasicAuth basicAuth = BasicAuth.builder().enabled(true).build();\n\n    Authentication authentication = Authentication\n      .builder()\n      .access(accessAuth)\n      .apiKey(apiKeyAuth)\n      .basic(basicAuth)\n      .build();\n\n    SimpleBuildRequest simpleBuildRequest = SimpleBuildRequest\n      .builder()\n      .apiId(1D)\n      .baseUrl(\"https://api-dev.liblab.com\")\n      .sdkName(\"liblab\")\n      .sdkVersion(\"1.0.0\")\n      .languages(languages)\n      .docs(docs)\n      .liblabVersion(\"2\")\n      .authentication(authentication)\n      .build();\n\n    BuildResponse response = testSdk.build.createSimpleBuild(simpleBuildRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/{id}/artifact": {
      "post": {
        "operationId": "createBuildArtifact",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateBuildEnhancedApiRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created build artifact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateBuildEnhancedApiRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createBuildEnhancedApiRequestStatus = 'FAIL';\n\n  const createBuildEnhancedApiRequestType = 'ENHANCED_API_SPEC';\n\n  const createBuildEnhancedApiRequest: CreateBuildEnhancedApiRequest = {\n    enhancedApiSpecFile: new ArrayBuffer(0),\n    status: createBuildEnhancedApiRequestStatus,\n    type: createBuildEnhancedApiRequestType,\n    error: 'Failed to generate due to missing permissions',\n  };\n\n  const { data } = await testSdk.build.createBuildArtifact(2.26, createBuildEnhancedApiRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/build\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateBuildEnhancedApiRequestStatus := build.CREATE_BUILD_ENHANCED_API_REQUEST_STATUS_FAIL\n\ncreateBuildEnhancedApiRequestType := build.CREATE_BUILD_ENHANCED_API_REQUEST_TYPE_ENHANCED_API_SPEC\n\nrequest := build.CreateBuildEnhancedApiRequest{}\nrequest.SetEnhancedApiSpecFile(\"\")\nrequest.SetStatus(createBuildEnhancedApiRequestStatus)\nrequest.SetType_(createBuildEnhancedApiRequestType)\nrequest.SetError(\"Error\")\n\nresponse, err := client.Build.CreateBuildArtifact(context.Background(), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateBuildEnhancedApiRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateBuildEnhancedApiRequest(\n    enhanced_api_spec_file=\"enhancedApiSpecFile\",\n    status=\"FAIL\",\n    type_=\"ENHANCED_API_SPEC\",\n    error=\"Failed to generate due to missing permissions\"\n)\n\nresult = sdk.build.create_build_artifact(\n    request_body=request_body,\n    id_=3.73\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.BuildResponse;\nimport com.swagger.petstore.models.CreateBuildEnhancedApiRequest;\nimport com.swagger.petstore.models.CreateBuildEnhancedApiRequestStatus;\nimport com.swagger.petstore.models.CreateBuildEnhancedApiRequestType;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateBuildEnhancedApiRequest createBuildEnhancedApiRequest = CreateBuildEnhancedApiRequest\n      .builder()\n      .enhancedApiSpecFile(enhancedApiSpecFile)\n      .status(CreateBuildEnhancedApiRequestStatus.FAIL)\n      .type(CreateBuildEnhancedApiRequestType.ENHANCED_API_SPEC)\n      .error(\"Failed to generate due to missing permissions\")\n      .build();\n\n    BuildResponse response = testSdk.build.createBuildArtifact(2.26D, createBuildEnhancedApiRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/statuses": {
      "get": {
        "operationId": "getBuildStatuses",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Build status list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildStatusResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.getBuildStatuses();\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Build.GetBuildStatuses(context.Background())\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.get_build_statuses()\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.BuildStatusResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<BuildStatusResponse> response = testSdk.build.getBuildStatuses();\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/{id}": {
      "get": {
        "operationId": "getById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Build by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBuildByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.getById(5.36);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Build.GetById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.get_by_id(id_=0.14)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetBuildByIdResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetBuildByIdResponse response = testSdk.build.getById(5.36D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/{buildId}/{apiSlug}/{orgId}": {
      "delete": {
        "operationId": "removeById",
        "summary": "",
        "parameters": [
          {
            "name": "buildId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "apiSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete build by id"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.removeById(8.87, 'apiSlug', 4.59);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Build.RemoveById(context.Background(), float64(12.34), \"apiSlug\", float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.remove_by_id(\n    build_id=0.35,\n    api_slug=\"apiSlug\",\n    org_id=4.66\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.build.removeById(8.87D, \"apiSlug\", 4.59D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/{buildId}/tag/{tagId}": {
      "post": {
        "operationId": "tag",
        "summary": "",
        "parameters": [
          {
            "name": "buildId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tagId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Attach a tag to a build"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.tag(8.63, 4.19);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Build.Tag(context.Background(), float64(12.34), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.tag(\n    build_id=1.15,\n    tag_id=6.4\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.build.tag(8.63D, 4.19D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/{buildId}/untag/{tagId}": {
      "post": {
        "operationId": "untag",
        "summary": "",
        "parameters": [
          {
            "name": "buildId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tagId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Untag a  build"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.untag(1.47, 2.77);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Build.Untag(context.Background(), float64(12.34), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.untag(\n    build_id=0.75,\n    tag_id=7.6\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.build.untag(1.47D, 2.77D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/{buildId}/approve": {
      "patch": {
        "operationId": "approveBuild",
        "summary": "",
        "parameters": [
          {
            "name": "buildId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Approve a  build"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.approveBuild(6.42);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Build.ApproveBuild(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.approve_build(build_id=6.94)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.build.approveBuild(6.42D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/builds/{buildId}/unapprove": {
      "patch": {
        "operationId": "unApproveBuild",
        "summary": "",
        "parameters": [
          {
            "name": "buildId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Unapprove a  build"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Build"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.build.unApproveBuild(8.07);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Build.UnApproveBuild(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.build.un_approve_build(build_id=2.06)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.build.unApproveBuild(8.07D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/{id}/builds": {
      "get": {
        "operationId": "getApiBuilds",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "status",
              "enum": [
                "status",
                "startTime"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "FAILURE"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SUCCESS",
                  "IN_PROGRESS",
                  "FAILURE"
                ]
              }
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "createdByIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Builds of the Api with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBuildResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getApiBuildsSortBy = 'status';\n  const getApiBuildsDirection = 'asc';\n\n  const { data } = await testSdk.api.getApiBuilds(6.84, {\n    offset: 6.76,\n    limit: 10,\n    sortBy: getApiBuildsSortBy,\n    direction: getApiBuildsDirection,\n    statuses: [getApiBuildsStatuses],\n    tags: [8.57],\n    createdByIds: [3.74],\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/api\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := api.GetApiBuildsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Api.GetApiBuilds(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetApiBuildsSortBy, GetApiBuildsDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\nstatuses=[\n    \"SUCCESS\"\n]\ntags=[\n    6.72\n]\ncreated_by_ids=[\n    0.42\n]\n\nresult = sdk.api.get_api_builds(\n    id_=3.13,\n    offset=4.87,\n    limit=10,\n    sort_by=\"status\",\n    direction=\"asc\",\n    statuses=statuses,\n    tags=tags,\n    created_by_ids=created_by_ids\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetApiBuildsDirection;\nimport com.swagger.petstore.models.GetApiBuildsParameters;\nimport com.swagger.petstore.models.GetApiBuildsSortBy;\nimport com.swagger.petstore.models.GetApiBuildsStatuses;\nimport com.swagger.petstore.models.PaginatedBuildResponse;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<GetApiBuildsStatuses> statuses = Arrays.asList(GetApiBuildsStatuses.SUCCESS);\n\n    List<Double> tags = Arrays.asList(8.57D);\n\n    List<Double> createdByIds = Arrays.asList(3.74D);\n\n    GetApiBuildsParameters requestParameters = GetApiBuildsParameters\n      .builder()\n      .offset(6.76D)\n      .limit(10D)\n      .sortBy(GetApiBuildsSortBy.STATUS)\n      .direction(GetApiBuildsDirection.ASC)\n      .statuses(statuses)\n      .tags(tags)\n      .createdByIds(createdByIds)\n      .build();\n\n    PaginatedBuildResponse response = testSdk.api.getApiBuilds(6.84D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/{id}/builds/tags": {
      "get": {
        "operationId": "getApiBuildTags",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Build Tags of the Api",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.api.getApiBuildTags(4.09);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Api.GetApiBuildTags(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.api.get_api_build_tags(id_=0.68)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.TagResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<TagResponse> response = testSdk.api.getApiBuildTags(4.09D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/{id}/sdks": {
      "get": {
        "operationId": "getApiSdks",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "FAIL"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IN_PROGRESS",
                  "FAIL",
                  "SUCCESS"
                ]
              }
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "createdByIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "languages",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "JAVA"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "JAVA",
                  "PYTHON",
                  "TYPESCRIPT",
                  "CSHARP",
                  "GO",
                  "TERRAFORM",
                  "SWIFT",
                  "PHP"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "version",
              "enum": [
                "createdAt",
                "version",
                "language"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sdks of the Api",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSdkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getApiSdksSortBy = 'createdAt';\n  const getApiSdksDirection = 'asc';\n\n  const { data } = await testSdk.api.getApiSdks(7.04, {\n    offset: 0.65,\n    limit: 10,\n    statuses: [getApiSdksStatuses],\n    tags: [3.73],\n    createdByIds: [9.73],\n    languages: [getApiSdksLanguages],\n    sortBy: getApiSdksSortBy,\n    direction: getApiSdksDirection,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/api\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := api.GetApiSdksRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Api.GetApiSdks(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetApiSdksSortBy, GetApiSdksDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\nstatuses=[\n    \"IN_PROGRESS\"\n]\ntags=[\n    3.09\n]\ncreated_by_ids=[\n    6.21\n]\nlanguages=[\n    \"JAVA\"\n]\n\nresult = sdk.api.get_api_sdks(\n    id_=1.67,\n    offset=4.86,\n    limit=10,\n    statuses=statuses,\n    tags=tags,\n    created_by_ids=created_by_ids,\n    languages=languages,\n    sort_by=\"createdAt\",\n    direction=\"asc\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetApiSdksDirection;\nimport com.swagger.petstore.models.GetApiSdksLanguages;\nimport com.swagger.petstore.models.GetApiSdksParameters;\nimport com.swagger.petstore.models.GetApiSdksSortBy;\nimport com.swagger.petstore.models.GetApiSdksStatuses;\nimport com.swagger.petstore.models.PaginatedSdkResponse;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<GetApiSdksStatuses> statuses = Arrays.asList(GetApiSdksStatuses.IN_PROGRESS);\n\n    List<Double> tags = Arrays.asList(3.73D);\n\n    List<Double> createdByIds = Arrays.asList(9.73D);\n\n    List<GetApiSdksLanguages> languages = Arrays.asList(GetApiSdksLanguages.JAVA);\n\n    GetApiSdksParameters requestParameters = GetApiSdksParameters\n      .builder()\n      .offset(0.65D)\n      .limit(10D)\n      .statuses(statuses)\n      .tags(tags)\n      .createdByIds(createdByIds)\n      .languages(languages)\n      .sortBy(GetApiSdksSortBy.CREATEDAT)\n      .direction(GetApiSdksDirection.ASC)\n      .build();\n\n    PaginatedSdkResponse response = testSdk.api.getApiSdks(7.04D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/{id}/docs": {
      "get": {
        "operationId": "getApiDocs",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "status",
              "enum": [
                "status",
                "createdAt",
                "version"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "FAIL"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IN_PROGRESS",
                  "FAIL",
                  "SUCCESS"
                ]
              }
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "createdByIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Docs of the Api",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getApiDocsSortBy = 'status';\n  const getApiDocsDirection = 'asc';\n\n  const { data } = await testSdk.api.getApiDocs(5.42, {\n    offset: 9.52,\n    limit: 10,\n    sortBy: getApiDocsSortBy,\n    direction: getApiDocsDirection,\n    statuses: [getApiDocsStatuses],\n    tags: [8.36],\n    createdByIds: [6.22],\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/api\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := api.GetApiDocsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Api.GetApiDocs(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetApiDocsSortBy, GetApiDocsDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\nstatuses=[\n    \"IN_PROGRESS\"\n]\ntags=[\n    5.91\n]\ncreated_by_ids=[\n    0.69\n]\n\nresult = sdk.api.get_api_docs(\n    id_=8.65,\n    offset=5.84,\n    limit=10,\n    sort_by=\"status\",\n    direction=\"asc\",\n    statuses=statuses,\n    tags=tags,\n    created_by_ids=created_by_ids\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetApiDocsDirection;\nimport com.swagger.petstore.models.GetApiDocsParameters;\nimport com.swagger.petstore.models.GetApiDocsSortBy;\nimport com.swagger.petstore.models.GetApiDocsStatuses;\nimport com.swagger.petstore.models.PaginatedDocResponse;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<GetApiDocsStatuses> statuses = Arrays.asList(GetApiDocsStatuses.IN_PROGRESS);\n\n    List<Double> tags = Arrays.asList(8.36D);\n\n    List<Double> createdByIds = Arrays.asList(6.22D);\n\n    GetApiDocsParameters requestParameters = GetApiDocsParameters\n      .builder()\n      .offset(9.52D)\n      .limit(10D)\n      .sortBy(GetApiDocsSortBy.STATUS)\n      .direction(GetApiDocsDirection.ASC)\n      .statuses(statuses)\n      .tags(tags)\n      .createdByIds(createdByIds)\n      .build();\n\n    PaginatedDocResponse response = testSdk.api.getApiDocs(5.42D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis": {
      "post": {
        "operationId": "createApi",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Api",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateApiRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createApiRequest: CreateApiRequest = {\n    name: 'My api',\n    version: '1.0',\n    orgId: 1,\n    spec: new ArrayBuffer(0),\n  };\n\n  const { data } = await testSdk.api.createApi(createApiRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/api\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := api.CreateApiRequest{}\nrequest.SetName(\"Name\")\nrequest.SetVersion(\"Version\")\nrequest.SetOrgId(float64(123))\nrequest.SetSpec(\"\")\n\nresponse, err := client.Api.CreateApi(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateApiRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateApiRequest(\n    name=\"My api\",\n    version=\"1.0\",\n    org_id=1,\n    spec=\"spec\"\n)\n\nresult = sdk.api.create_api(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ApiResponse;\nimport com.swagger.petstore.models.CreateApiRequest;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateApiRequest createApiRequest = CreateApiRequest\n      .builder()\n      .name(\"My api\")\n      .version(\"1.0\")\n      .orgId(1D)\n      .spec(spec)\n      .build();\n\n    ApiResponse response = testSdk.api.createApi(createApiRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "getApis",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "apiSlug",
            "required": false,
            "in": "query",
            "schema": {
              "example": "my-api",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apis by orgId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.api.getApis({\n    orgId: 1,\n    apiSlug: 'my-api',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/api\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := api.GetApisRequestParams{}\nparams.SetOrgId(float64(123))\n\nresponse, err := client.Api.GetApis(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.api.get_apis(\n    org_id=1,\n    api_slug=\"my-api\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ApiResponse;\nimport com.swagger.petstore.models.GetApisParameters;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetApisParameters requestParameters = GetApisParameters.builder().orgId(1D).apiSlug(\"my-api\").build();\n\n    List<ApiResponse> response = testSdk.api.getApis(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/search": {
      "get": {
        "operationId": "searchApis",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "example": "alpaca",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "example": "createdAt",
              "enum": [
                "createdAt",
                "updatedAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "desc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "orgIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apis search",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApisSearchPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const searchApisSortBy = 'createdAt';\n  const searchApisDirection = 'asc';\n\n  const { data } = await testSdk.api.searchApis({\n    offset: 1.56,\n    limit: 10,\n    name: 'alpaca',\n    sortBy: searchApisSortBy,\n    orgId: 1,\n    direction: searchApisDirection,\n    orgIds: [8.4],\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/api\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := api.SearchApisRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Api.SearchApis(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import SearchApisSortBy, SearchApisDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\norg_ids=[\n    7.42\n]\n\nresult = sdk.api.search_apis(\n    offset=4.82,\n    limit=10,\n    name=\"alpaca\",\n    sort_by=\"createdAt\",\n    org_id=1,\n    direction=\"asc\",\n    org_ids=org_ids\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ApisSearchPaginatedResponse;\nimport com.swagger.petstore.models.SearchApisDirection;\nimport com.swagger.petstore.models.SearchApisParameters;\nimport com.swagger.petstore.models.SearchApisSortBy;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<Double> orgIds = Arrays.asList(8.4D);\n\n    SearchApisParameters requestParameters = SearchApisParameters\n      .builder()\n      .offset(1.56D)\n      .limit(10D)\n      .name(\"alpaca\")\n      .sortBy(SearchApisSortBy.CREATEDAT)\n      .orgId(1D)\n      .direction(SearchApisDirection.ASC)\n      .orgIds(orgIds)\n      .build();\n\n    ApisSearchPaginatedResponse response = testSdk.api.searchApis(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/{id}": {
      "get": {
        "operationId": "getApiById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Api by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.api.getApiById(1.86);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Api.GetApiById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.api.get_api_by_id(id_=3.56)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ApiResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    ApiResponse response = testSdk.api.getApiById(1.86D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "patch": {
        "operationId": "updateApi",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Api",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk, UpdateApiRequest } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const updateApiRequest: UpdateApiRequest = {\n    name: 'My api name',\n    version: '1.0.1',\n  };\n\n  const { data } = await testSdk.api.updateApi(8.47, updateApiRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/api\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := api.UpdateApiRequest{}\nrequest.SetName(\"Name\")\nrequest.SetVersion(\"Version\")\n\nresponse, err := client.Api.UpdateApi(context.Background(), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import UpdateApiRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = UpdateApiRequest(\n    name=\"My api name\",\n    version=\"1.0.1\"\n)\n\nresult = sdk.api.update_api(\n    request_body=request_body,\n    id_=0.37\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ApiResponse;\nimport com.swagger.petstore.models.UpdateApiRequest;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    UpdateApiRequest updateApiRequest = UpdateApiRequest.builder().name(\"My api name\").version(\"1.0.1\").build();\n\n    ApiResponse response = testSdk.api.updateApi(8.47D, updateApiRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/{id}/members": {
      "get": {
        "operationId": "getApiMembers",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Org members of the Api",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgMemberResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.api.getApiMembers(6.21);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Api.GetApiMembers(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.api.get_api_members(id_=2.97)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.OrgMemberResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<OrgMemberResponse> response = testSdk.api.getApiMembers(6.21D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/delete/{apiSlug}/{orgId}": {
      "delete": {
        "operationId": "removeApi",
        "summary": "",
        "parameters": [
          {
            "name": "apiSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.api.removeApi('apiSlug', 9.6);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Api.RemoveApi(context.Background(), \"apiSlug\", float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.api.remove_api(\n    api_slug=\"apiSlug\",\n    org_id=6.59\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.api.removeApi(\"apiSlug\", 9.6D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/apis/{orgSlug}/{apiSlug}": {
      "get": {
        "operationId": "getApiByOrgSlugAndApiSlug",
        "summary": "",
        "parameters": [
          {
            "name": "orgSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all api versions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Api"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.api.getApiByOrgSlugAndApiSlug('orgSlug', 'apiSlug');\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Api.GetApiByOrgSlugAndApiSlug(context.Background(), \"orgSlug\", \"apiSlug\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.api.get_api_by_org_slug_and_api_slug(\n    org_slug=\"orgSlug\",\n    api_slug=\"apiSlug\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ApiResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<ApiResponse> response = testSdk.api.getApiByOrgSlugAndApiSlug(\"orgSlug\", \"apiSlug\");\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs": {
      "post": {
        "operationId": "createOrg",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrgRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateOrgRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createOrgRequest: CreateOrgRequest = {\n    name: 'Example Org',\n    description: 'Example Org Description',\n    website: 'https://example.com',\n    domain: 'business.com',\n    logoUrl: 'https://liblab.com/images/logo.png',\n  };\n\n  const { data } = await testSdk.org.createOrg(createOrgRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/org\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := org.CreateOrgRequest{}\nrequest.SetName(\"Name\")\nrequest.SetDescription(\"Description\")\nrequest.SetWebsite(\"Website\")\nrequest.SetDomain(\"Domain\")\nrequest.SetLogoUrl(\"LogoUrl\")\n\nresponse, err := client.Org.CreateOrg(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateOrgRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateOrgRequest(\n    name=\"Example Org\",\n    description=\"Example Org Description\",\n    website=\"https://example.com\",\n    domain=\"business.com\",\n    logo_url=\"https://liblab.com/images/logo.png\"\n)\n\nresult = sdk.org.create_org(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateOrgRequest;\nimport com.swagger.petstore.models.OrgResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateOrgRequest createOrgRequest = CreateOrgRequest\n      .builder()\n      .name(\"Example Org\")\n      .description(\"Example Org Description\")\n      .website(\"https://example.com\")\n      .domain(\"business.com\")\n      .logoUrl(\"https://liblab.com/images/logo.png\")\n      .build();\n\n    OrgResponse response = testSdk.org.createOrg(createOrgRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "getOrgs",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "example": "createdAt",
              "enum": [
                "buildsCount",
                "membersCount",
                "createdAt"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All orgs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminPaginatedOrgResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getOrgsDirection = 'asc';\n  const getOrgsSortBy = 'buildsCount';\n\n  const { data } = await testSdk.org.getOrgs({\n    offset: 9.8,\n    limit: 10,\n    direction: getOrgsDirection,\n    sortBy: getOrgsSortBy,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/org\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := org.GetOrgsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Org.GetOrgs(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetOrgsDirection, GetOrgsSortBy\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org.get_orgs(\n    offset=1.83,\n    limit=10,\n    direction=\"asc\",\n    sort_by=\"buildsCount\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.AdminPaginatedOrgResponse;\nimport com.swagger.petstore.models.GetOrgsDirection;\nimport com.swagger.petstore.models.GetOrgsParameters;\nimport com.swagger.petstore.models.GetOrgsSortBy;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetOrgsParameters requestParameters = GetOrgsParameters\n      .builder()\n      .offset(9.8D)\n      .limit(10D)\n      .direction(GetOrgsDirection.ASC)\n      .sortBy(GetOrgsSortBy.BUILDSCOUNT)\n      .build();\n\n    AdminPaginatedOrgResponse response = testSdk.org.getOrgs(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/search": {
      "get": {
        "operationId": "searchOrgs",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "website",
            "required": false,
            "in": "query",
            "schema": {
              "example": "https://liblab.com",
              "type": "string"
            }
          },
          {
            "name": "domain",
            "required": false,
            "in": "query",
            "schema": {
              "example": "liblab.com",
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "example": "liblab",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search for orgs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminPaginatedOrgResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.org.searchOrgs({\n    offset: 5.55,\n    limit: 10,\n    website: 'https://liblab.com',\n    domain: 'liblab.com',\n    name: 'liblab',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/org\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := org.SearchOrgsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Org.SearchOrgs(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org.search_orgs(\n    offset=5.28,\n    limit=10,\n    website=\"https://liblab.com\",\n    domain=\"liblab.com\",\n    name=\"liblab\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.AdminPaginatedOrgResponse;\nimport com.swagger.petstore.models.SearchOrgsParameters;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SearchOrgsParameters requestParameters = SearchOrgsParameters\n      .builder()\n      .offset(5.55D)\n      .limit(10D)\n      .website(\"https://liblab.com\")\n      .domain(\"liblab.com\")\n      .name(\"liblab\")\n      .build();\n\n    AdminPaginatedOrgResponse response = testSdk.org.searchOrgs(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{id}": {
      "get": {
        "operationId": "getOrgById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Org by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrgResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdminOrgResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.org.getOrgById(1.96);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Org.GetOrgById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org.get_org_by_id(id_=1.01)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetOrgByIdOkResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetOrgByIdOkResponse response = testSdk.org.getOrgById(1.96D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "patch": {
        "operationId": "updateOrg",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrgRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { EditOrgRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const editOrgRequest: EditOrgRequest = {\n    name: 'Example Org',\n    description: 'Example Org Description',\n    website: 'https://example.com',\n    domain: 'example.com',\n    isAllowedForBeta: true,\n    logoUrl: 'https://liblab.com/images/logo.png',\n    remainingCredits: 19,\n  };\n\n  const { data } = await testSdk.org.updateOrg(9.77, editOrgRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/org\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := org.EditOrgRequest{}\nrequest.SetName(\"Name\")\nrequest.SetDescription(\"Description\")\nrequest.SetWebsite(\"Website\")\nrequest.SetDomain(\"Domain\")\nrequest.SetIsAllowedForBeta(true)\nrequest.SetLogoUrl(\"LogoUrl\")\nrequest.SetRemainingCredits(float64(123))\n\nresponse, err := client.Org.UpdateOrg(context.Background(), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import EditOrgRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = EditOrgRequest(\n    name=\"Example Org\",\n    description=\"Example Org Description\",\n    website=\"https://example.com\",\n    domain=\"example.com\",\n    is_allowed_for_beta=True,\n    logo_url=\"https://liblab.com/images/logo.png\",\n    remaining_credits=19\n)\n\nresult = sdk.org.update_org(\n    request_body=request_body,\n    id_=8.88\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.EditOrgRequest;\nimport com.swagger.petstore.models.OrgResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    EditOrgRequest editOrgRequest = EditOrgRequest\n      .builder()\n      .name(\"Example Org\")\n      .description(\"Example Org Description\")\n      .website(\"https://example.com\")\n      .domain(\"example.com\")\n      .isAllowedForBeta(true)\n      .logoUrl(\"https://liblab.com/images/logo.png\")\n      .remainingCredits(19D)\n      .build();\n\n    OrgResponse response = testSdk.org.updateOrg(9.77D, editOrgRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "delete": {
        "operationId": "removeOrg",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.org.removeOrg(8.29);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Org.RemoveOrg(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org.remove_org(id_=0.73)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.org.removeOrg(8.29D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{id}/apis": {
      "get": {
        "operationId": "getApisByOrg",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Apis owned by the org grouped by their name and slug",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupApisByOrgIdResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.org.getApisByOrg(7.44);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Org.GetApisByOrg(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org.get_apis_by_org(id_=9.94)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GroupApisByOrgIdResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<GroupApisByOrgIdResponse> response = testSdk.org.getApisByOrg(7.44D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{id}/jobs": {
      "get": {
        "operationId": "getOrgJobs",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "createdAt",
              "enum": [
                "createdAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "FAILURE"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SUCCESS",
                  "IN_PROGRESS",
                  "FAILURE"
                ]
              }
            }
          },
          {
            "name": "createdByIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "apiSlug",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "my-api",
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "1.0.0",
              "type": "string"
            }
          },
          {
            "name": "buildType",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "SDK",
                "DOC"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SNIPPETS",
                  "DOC",
                  "SDK"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All jobs performed by the org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgJobsResponseWithTotalCount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getOrgJobsSortBy = 'createdAt';\n  const getOrgJobsDirection = 'asc';\n\n  const { data } = await testSdk.org.getOrgJobs(0.1, {\n    offset: 3.23,\n    limit: 10,\n    sortBy: getOrgJobsSortBy,\n    direction: getOrgJobsDirection,\n    statuses: [getOrgJobsStatuses],\n    createdByIds: [2.41],\n    apiSlug: 'my-api',\n    apiVersion: '1.0.0',\n    buildType: [getOrgJobsBuildType],\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/org\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := org.GetOrgJobsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Org.GetOrgJobs(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetOrgJobsSortBy, GetOrgJobsDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\nstatuses=[\n    \"SUCCESS\"\n]\ncreated_by_ids=[\n    8.54\n]\nbuild_type=[\n    \"SNIPPETS\"\n]\n\nresult = sdk.org.get_org_jobs(\n    id_=4.03,\n    offset=9.86,\n    limit=10,\n    sort_by=\"createdAt\",\n    direction=\"asc\",\n    statuses=statuses,\n    created_by_ids=created_by_ids,\n    api_slug=\"my-api\",\n    api_version=\"1.0.0\",\n    build_type=build_type\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetOrgJobsBuildType;\nimport com.swagger.petstore.models.GetOrgJobsDirection;\nimport com.swagger.petstore.models.GetOrgJobsParameters;\nimport com.swagger.petstore.models.GetOrgJobsSortBy;\nimport com.swagger.petstore.models.GetOrgJobsStatuses;\nimport com.swagger.petstore.models.PaginatedOrgJobsResponseWithTotalCount;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<GetOrgJobsStatuses> statuses = Arrays.asList(GetOrgJobsStatuses.SUCCESS);\n\n    List<Double> createdByIds = Arrays.asList(2.41D);\n\n    List<GetOrgJobsBuildType> buildType = Arrays.asList(GetOrgJobsBuildType.SNIPPETS);\n\n    GetOrgJobsParameters requestParameters = GetOrgJobsParameters\n      .builder()\n      .offset(3.23D)\n      .limit(10D)\n      .sortBy(GetOrgJobsSortBy.CREATEDAT)\n      .direction(GetOrgJobsDirection.ASC)\n      .statuses(statuses)\n      .createdByIds(createdByIds)\n      .apiSlug(\"my-api\")\n      .apiVersion(\"1.0.0\")\n      .buildType(buildType)\n      .build();\n\n    PaginatedOrgJobsResponseWithTotalCount response = testSdk.org.getOrgJobs(0.1D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{id}/docs": {
      "get": {
        "operationId": "getDocsByOrg",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Docs owned by org",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.org.getDocsByOrg(4.68);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Org.GetDocsByOrg(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org.get_docs_by_org(id_=2.58)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<DocResponse> response = testSdk.org.getDocsByOrg(4.68D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{id}/builds": {
      "get": {
        "operationId": "getBuildByOrg",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "status",
              "enum": [
                "status",
                "updatedAt",
                "apiVersion"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "FAILURE"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SUCCESS",
                  "IN_PROGRESS",
                  "FAILURE"
                ]
              }
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "createdByIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "apiSlug",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "my-api",
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "1.0.0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Builds owned by an org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgBuildsWithJobsResponseWithTotalCount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getBuildByOrgSortBy = 'status';\n  const getBuildByOrgDirection = 'asc';\n\n  const { data } = await testSdk.org.getBuildByOrg(2.6, {\n    offset: 2.06,\n    limit: 10,\n    sortBy: getBuildByOrgSortBy,\n    direction: getBuildByOrgDirection,\n    statuses: [getBuildByOrgStatuses],\n    tags: [5.07],\n    createdByIds: [5.96],\n    apiSlug: 'my-api',\n    apiVersion: '1.0.0',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/org\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := org.GetBuildByOrgRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Org.GetBuildByOrg(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetBuildByOrgSortBy, GetBuildByOrgDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\nstatuses=[\n    \"SUCCESS\"\n]\ntags=[\n    7.66\n]\ncreated_by_ids=[\n    4.01\n]\n\nresult = sdk.org.get_build_by_org(\n    id_=6.19,\n    offset=2.6,\n    limit=10,\n    sort_by=\"status\",\n    direction=\"asc\",\n    statuses=statuses,\n    tags=tags,\n    created_by_ids=created_by_ids,\n    api_slug=\"my-api\",\n    api_version=\"1.0.0\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetBuildByOrgDirection;\nimport com.swagger.petstore.models.GetBuildByOrgParameters;\nimport com.swagger.petstore.models.GetBuildByOrgSortBy;\nimport com.swagger.petstore.models.GetBuildByOrgStatuses;\nimport com.swagger.petstore.models.PaginatedOrgBuildsWithJobsResponseWithTotalCount;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<GetBuildByOrgStatuses> statuses = Arrays.asList(GetBuildByOrgStatuses.SUCCESS);\n\n    List<Double> tags = Arrays.asList(5.07D);\n\n    List<Double> createdByIds = Arrays.asList(5.96D);\n\n    GetBuildByOrgParameters requestParameters = GetBuildByOrgParameters\n      .builder()\n      .offset(2.06D)\n      .limit(10D)\n      .sortBy(GetBuildByOrgSortBy.STATUS)\n      .direction(GetBuildByOrgDirection.ASC)\n      .statuses(statuses)\n      .tags(tags)\n      .createdByIds(createdByIds)\n      .apiSlug(\"my-api\")\n      .apiVersion(\"1.0.0\")\n      .build();\n\n    PaginatedOrgBuildsWithJobsResponseWithTotalCount response = testSdk.org.getBuildByOrg(2.6D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{id}/api-builds": {
      "get": {
        "operationId": "getOrgApiBuilds",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Builds mapped by the api who created them",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgBuildsGroupedByApiSlugResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/orgs/{id}/artifacts": {
      "get": {
        "operationId": "getOrgArtifacts",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "status",
              "enum": [
                "status",
                "startTime",
                "createdAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "desc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "artifactTypes",
            "required": false,
            "in": "query",
            "schema": {
              "default": [
                "DOC",
                "SDK"
              ],
              "example": [
                "SDK"
              ],
              "type": "array",
              "items": {}
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "IN_PROGRESS"
              ],
              "type": "array",
              "items": {}
            }
          },
          {
            "name": "createdByIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Builds mapped by the api who created them",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgArtifactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getOrgArtifactsSortBy = 'status';\n  const getOrgArtifactsDirection = 'asc';\n\n  const { data } = await testSdk.org.getOrgArtifacts(0.26, {\n    offset: 9.9,\n    limit: 10,\n    sortBy: getOrgArtifactsSortBy,\n    direction: getOrgArtifactsDirection,\n    artifactTypes: [[]],\n    statuses: [[]],\n    createdByIds: [1.47],\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/org\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := org.GetOrgArtifactsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Org.GetOrgArtifacts(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetOrgArtifactsSortBy, GetOrgArtifactsDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\nartifact_types=[\n    \"\"\n]\nstatuses=[\n    \"\"\n]\ncreated_by_ids=[\n    0.07\n]\n\nresult = sdk.org.get_org_artifacts(\n    id_=1.01,\n    offset=5.72,\n    limit=10,\n    sort_by=\"status\",\n    direction=\"asc\",\n    artifact_types=artifact_types,\n    statuses=statuses,\n    created_by_ids=created_by_ids\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetOrgArtifactsDirection;\nimport com.swagger.petstore.models.GetOrgArtifactsParameters;\nimport com.swagger.petstore.models.GetOrgArtifactsSortBy;\nimport com.swagger.petstore.models.PaginatedOrgArtifactsResponse;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<Object> artifactTypes = Arrays.asList(new Object());\n\n    List<Object> statuses = Arrays.asList(new Object());\n\n    List<Double> createdByIds = Arrays.asList(1.47D);\n\n    GetOrgArtifactsParameters requestParameters = GetOrgArtifactsParameters\n      .builder()\n      .offset(9.9D)\n      .limit(10D)\n      .sortBy(GetOrgArtifactsSortBy.STATUS)\n      .direction(GetOrgArtifactsDirection.ASC)\n      .artifactTypes(artifactTypes)\n      .statuses(statuses)\n      .createdByIds(createdByIds)\n      .build();\n\n    PaginatedOrgArtifactsResponse response = testSdk.org.getOrgArtifacts(0.26D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/members": {
      "get": {
        "operationId": "getByOrgId",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "example": "john@liblab.com",
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "required": false,
            "in": "query",
            "schema": {
              "example": "John",
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "required": false,
            "in": "query",
            "schema": {
              "example": "Doe",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "createdAt",
              "enum": [
                "createdAt",
                "role"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Org members for org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgMemberResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org Member"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getByOrgIdSortBy = 'createdAt';\n  const getByOrgIdDirection = 'asc';\n\n  const { data } = await testSdk.orgMember.getByOrgId(7.35, {\n    offset: 2.46,\n    limit: 10,\n    email: 'john@liblab.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    sortBy: getByOrgIdSortBy,\n    direction: getByOrgIdDirection,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/orgmember\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := orgmember.GetByOrgIdRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.OrgMember.GetByOrgId(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetByOrgIdSortBy, GetByOrgIdDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_member.get_by_org_id(\n    org_id=0.94,\n    offset=1.75,\n    limit=10,\n    email=\"john@liblab.com\",\n    first_name=\"John\",\n    last_name=\"Doe\",\n    sort_by=\"createdAt\",\n    direction=\"asc\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetByOrgIdDirection;\nimport com.swagger.petstore.models.GetByOrgIdParameters;\nimport com.swagger.petstore.models.GetByOrgIdSortBy;\nimport com.swagger.petstore.models.PaginatedOrgMemberResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetByOrgIdParameters requestParameters = GetByOrgIdParameters\n      .builder()\n      .offset(2.46D)\n      .limit(10D)\n      .email(\"john@liblab.com\")\n      .firstName(\"John\")\n      .lastName(\"Doe\")\n      .sortBy(GetByOrgIdSortBy.CREATEDAT)\n      .direction(GetByOrgIdDirection.ASC)\n      .build();\n\n    PaginatedOrgMemberResponse response = testSdk.orgMember.getByOrgId(7.35D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "post": {
        "operationId": "createMember",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrgMemberRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created org member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgMemberResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org Member"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateOrgMemberRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createOrgMemberRequestRole = 'ADMIN';\n\n  const createOrgMemberRequest: CreateOrgMemberRequest = {\n    userId: 1,\n    role: createOrgMemberRequestRole,\n  };\n\n  const { data } = await testSdk.orgMember.createMember(1.99, createOrgMemberRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/orgmember\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateOrgMemberRequestRole := orgmember.CREATE_ORG_MEMBER_REQUEST_ROLE_ADMIN\n\nrequest := orgmember.CreateOrgMemberRequest{}\nrequest.SetUserId(float64(123))\nrequest.SetRole(createOrgMemberRequestRole)\n\nresponse, err := client.OrgMember.CreateMember(context.Background(), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateOrgMemberRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateOrgMemberRequest(\n    user_id=1,\n    role=\"ADMIN\"\n)\n\nresult = sdk.org_member.create_member(\n    request_body=request_body,\n    org_id=7.58\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateOrgMemberRequest;\nimport com.swagger.petstore.models.CreateOrgMemberRequestRole;\nimport com.swagger.petstore.models.OrgMemberResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateOrgMemberRequest createOrgMemberRequest = CreateOrgMemberRequest\n      .builder()\n      .userId(1D)\n      .role(CreateOrgMemberRequestRole.ADMIN)\n      .build();\n\n    OrgMemberResponse response = testSdk.orgMember.createMember(1.99D, createOrgMemberRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/members/{userId}": {
      "delete": {
        "operationId": "removeMember",
        "summary": "",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org Member"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.orgMember.removeMember(9.43, 1.97);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.OrgMember.RemoveMember(context.Background(), float64(12.34), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_member.remove_member(\n    user_id=7.42,\n    org_id=3.05\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.orgMember.removeMember(9.43D, 1.97D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "patch": {
        "operationId": "updateMember",
        "summary": "",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrgMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated org member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgMemberResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org Member"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk, UpdateOrgMemberRequest } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const updateOrgMemberRequestRole = 'ADMIN';\n\n  const updateOrgMemberRequest: UpdateOrgMemberRequest = {\n    role: updateOrgMemberRequestRole,\n    orgId: 1,\n  };\n\n  const { data } = await testSdk.orgMember.updateMember(8.2, 4.89, updateOrgMemberRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/orgmember\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nupdateOrgMemberRequestRole := orgmember.UPDATE_ORG_MEMBER_REQUEST_ROLE_ADMIN\n\nrequest := orgmember.UpdateOrgMemberRequest{}\nrequest.SetRole(updateOrgMemberRequestRole)\nrequest.SetOrgId(float64(123))\n\nresponse, err := client.OrgMember.UpdateMember(context.Background(), float64(12.34), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import UpdateOrgMemberRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = UpdateOrgMemberRequest(\n    role=\"ADMIN\",\n    org_id=1\n)\n\nresult = sdk.org_member.update_member(\n    request_body=request_body,\n    user_id=0.69,\n    org_id=4.16\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.OrgMemberResponse;\nimport com.swagger.petstore.models.UpdateOrgMemberRequest;\nimport com.swagger.petstore.models.UpdateOrgMemberRequestRole;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    UpdateOrgMemberRequest updateOrgMemberRequest = UpdateOrgMemberRequest\n      .builder()\n      .role(UpdateOrgMemberRequestRole.ADMIN)\n      .orgId(1D)\n      .build();\n\n    OrgMemberResponse response = testSdk.orgMember.updateMember(8.2D, 4.89D, updateOrgMemberRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/leave": {
      "delete": {
        "operationId": "leaveOrg",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org Member"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.orgMember.leaveOrg(6.94);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.OrgMember.LeaveOrg(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_member.leave_org(org_id=9.79)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.orgMember.leaveOrg(6.94D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/enable": {
      "patch": {
        "operationId": "enableAllMembers",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enabled all org memberships",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateManyOrgMembersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org Member"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.orgMember.enableAllMembers(7.29);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.OrgMember.EnableAllMembers(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_member.enable_all_members(org_id=5.26)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.UpdateManyOrgMembersResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    UpdateManyOrgMembersResponse response = testSdk.orgMember.enableAllMembers(7.29D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/disable": {
      "patch": {
        "operationId": "disableAllMembers",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Disabled all org memberships",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateManyOrgMembersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Org Member"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.orgMember.disableAllMembers(4.91);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.OrgMember.DisableAllMembers(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_member.disable_all_members(org_id=2.93)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.UpdateManyOrgMembersResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    UpdateManyOrgMembersResponse response = testSdk.orgMember.disableAllMembers(4.91D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/artifacts": {
      "post": {
        "operationId": "createArtifact",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtifactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created artifact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Artifact"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateArtifactRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createArtifactRequestArtifactType = 'SDK';\n\n  const createArtifactRequestStatus = 'IN_PROGRESS';\n\n  const createArtifactRequest: CreateArtifactRequest = {\n    artifactType: createArtifactRequestArtifactType,\n    buildId: 1,\n    status: createArtifactRequestStatus,\n    bucketName: 'bucketName',\n    bucketKey: 'bucketKey',\n  };\n\n  const { data } = await testSdk.artifact.createArtifact(createArtifactRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/artifact\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateArtifactRequestArtifactType := artifact.CREATE_ARTIFACT_REQUEST_ARTIFACT_TYPE_SDK\n\ncreateArtifactRequestStatus := artifact.CREATE_ARTIFACT_REQUEST_STATUS_IN_PROGRESS\n\nrequest := artifact.CreateArtifactRequest{}\nrequest.SetArtifactType(createArtifactRequestArtifactType)\nrequest.SetBuildId(float64(123))\nrequest.SetStatus(createArtifactRequestStatus)\nrequest.SetBucketName(\"BucketName\")\nrequest.SetBucketKey(\"BucketKey\")\n\nresponse, err := client.Artifact.CreateArtifact(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateArtifactRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateArtifactRequest(\n    artifact_type=\"SDK\",\n    build_id=1,\n    status=\"IN_PROGRESS\",\n    bucket_name=\"bucketName\",\n    bucket_key=\"bucketKey\"\n)\n\nresult = sdk.artifact.create_artifact(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ArtifactResponse;\nimport com.swagger.petstore.models.CreateArtifactRequest;\nimport com.swagger.petstore.models.CreateArtifactRequestArtifactType;\nimport com.swagger.petstore.models.CreateArtifactRequestStatus;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateArtifactRequest createArtifactRequest = CreateArtifactRequest\n      .builder()\n      .artifactType(CreateArtifactRequestArtifactType.SDK)\n      .buildId(1D)\n      .status(CreateArtifactRequestStatus.IN_PROGRESS)\n      .bucketName(\"bucketName\")\n      .bucketKey(\"bucketKey\")\n      .build();\n\n    ArtifactResponse response = testSdk.artifact.createArtifact(createArtifactRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "getArtifacts",
        "summary": "",
        "parameters": [
          {
            "name": "buildId",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artifacts by buildId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Artifact"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.artifact.getArtifacts({\n    buildId: 1,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/artifact\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := artifact.GetArtifactsRequestParams{}\nparams.SetBuildId(float64(123))\n\nresponse, err := client.Artifact.GetArtifacts(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.artifact.get_artifacts(build_id=1)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ArtifactResponse;\nimport com.swagger.petstore.models.GetArtifactsParameters;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetArtifactsParameters requestParameters = GetArtifactsParameters.builder().buildId(1D).build();\n\n    List<ArtifactResponse> response = testSdk.artifact.getArtifacts(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/artifacts/statuses": {
      "get": {
        "operationId": "getArtifactStatuses",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Artifact status list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactStatusResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Artifact"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.artifact.getArtifactStatuses();\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Artifact.GetArtifactStatuses(context.Background())\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.artifact.get_artifact_statuses()\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ArtifactStatusResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<ArtifactStatusResponse> response = testSdk.artifact.getArtifactStatuses();\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/artifacts/{id}": {
      "get": {
        "operationId": "getArtifactById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artifact by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Artifact"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.artifact.getArtifactById(3.87);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Artifact.GetArtifactById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.artifact.get_artifact_by_id(id_=1.98)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ArtifactResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    ArtifactResponse response = testSdk.artifact.getArtifactById(3.87D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "delete": {
        "operationId": "removeArtifact",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Artifact"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.artifact.removeArtifact(6.57);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Artifact.RemoveArtifact(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.artifact.remove_artifact(id_=9.51)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.artifact.removeArtifact(6.57D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/sdks": {
      "post": {
        "operationId": "createSdk",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSdkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity that has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SdkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Sdk"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateSdkRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createSdkRequestLanguage = 'JAVA';\n\n  const createSdkRequest: CreateSdkRequest = {\n    language: createSdkRequestLanguage,\n    fileLocation: 'https://my-file.location',\n    version: '1.0.0',\n    artifactId: 1,\n  };\n\n  const { data } = await testSdk.sdk.createSdk(createSdkRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/sdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateSdkRequestLanguage := sdk.CREATE_SDK_REQUEST_LANGUAGE_JAVA\n\nrequest := sdk.CreateSdkRequest{}\nrequest.SetLanguage(createSdkRequestLanguage)\nrequest.SetFileLocation(\"FileLocation\")\nrequest.SetVersion(\"Version\")\nrequest.SetArtifactId(float64(123))\n\nresponse, err := client.Sdk.CreateSdk(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateSdkRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateSdkRequest(\n    language=\"JAVA\",\n    file_location=\"https://my-file.location\",\n    version=\"1.0.0\",\n    artifact_id=1\n)\n\nresult = sdk.sdk.create_sdk(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateSdkRequest;\nimport com.swagger.petstore.models.CreateSdkRequestLanguage;\nimport com.swagger.petstore.models.SdkResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateSdkRequest createSdkRequest = CreateSdkRequest\n      .builder()\n      .language(CreateSdkRequestLanguage.JAVA)\n      .fileLocation(\"https://my-file.location\")\n      .version(\"1.0.0\")\n      .artifactId(1D)\n      .build();\n\n    SdkResponse response = testSdk.sdk.createSdk(createSdkRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "findSdks",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "artifactId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "example": "version",
              "enum": [
                "createdAt",
                "version",
                "language"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "example": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "languages",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                "TYPESCRIPT"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "JAVA",
                  "PYTHON",
                  "TYPESCRIPT",
                  "CSHARP",
                  "GO",
                  "TERRAFORM",
                  "SWIFT",
                  "PHP"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All sdks that match the query params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSdkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Sdk"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const findSdksSortBy = 'createdAt';\n  const findSdksDirection = 'asc';\n\n  const { data } = await testSdk.sdk.findSdks({\n    offset: 1.72,\n    limit: 10,\n    artifactId: 1,\n    sortBy: findSdksSortBy,\n    direction: findSdksDirection,\n    languages: [findSdksLanguages],\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/sdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := sdk.FindSdksRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Sdk.FindSdks(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import FindSdksSortBy, FindSdksDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\nlanguages=[\n    \"JAVA\"\n]\n\nresult = sdk.sdk.find_sdks(\n    offset=6.17,\n    limit=10,\n    artifact_id=1,\n    sort_by=\"createdAt\",\n    direction=\"asc\",\n    languages=languages\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.FindSdksDirection;\nimport com.swagger.petstore.models.FindSdksLanguages;\nimport com.swagger.petstore.models.FindSdksParameters;\nimport com.swagger.petstore.models.FindSdksSortBy;\nimport com.swagger.petstore.models.PaginatedSdkResponse;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<FindSdksLanguages> languages = Arrays.asList(FindSdksLanguages.JAVA);\n\n    FindSdksParameters requestParameters = FindSdksParameters\n      .builder()\n      .offset(1.72D)\n      .limit(10D)\n      .artifactId(1D)\n      .sortBy(FindSdksSortBy.CREATEDAT)\n      .direction(FindSdksDirection.ASC)\n      .languages(languages)\n      .build();\n\n    PaginatedSdkResponse response = testSdk.sdk.findSdks(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/sdks/{id}": {
      "get": {
        "operationId": "getSdkById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity that has been found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SdkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Sdk"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.sdk.getSdkById(5.6);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Sdk.GetSdkById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.sdk.get_sdk_by_id(id_=7.57)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.SdkResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SdkResponse response = testSdk.sdk.getSdkById(5.6D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "delete": {
        "operationId": "removeSdk",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Sdk"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.sdk.removeSdk(3.69);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Sdk.RemoveSdk(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.sdk.remove_sdk(id_=3.58)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.sdk.removeSdk(3.69D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/docs/approved": {
      "get": {
        "operationId": "getApprovedByOrgSlugAndApiSlug",
        "summary": "",
        "parameters": [
          {
            "name": "orgSlug",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiSlug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Approved doc by orgSlug, apiSlug and apiVersion. If apiVersion is omitted attempt to return latest version. If both apiVersion and apiSlug are omitted and the org has only one API, the latest API version will be returned, else a 409 Conflict will be thrown",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Returned when apiSlug is omitted but no apis exist for the org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Returned when apiSlug is omitted and an org has more than one API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.getApprovedByOrgSlugAndApiSlug({\n    orgSlug: 'orgSlug',\n    apiSlug: 'apiSlug',\n    apiVersion: 'apiVersion',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/doc\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := doc.GetApprovedByOrgSlugAndApiSlugRequestParams{}\nparams.SetOrgSlug(\"string\")\n\nresponse, err := client.Doc.GetApprovedByOrgSlugAndApiSlug(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.get_approved_by_org_slug_and_api_slug(\n    org_slug=\"orgSlug\",\n    api_slug=\"apiSlug\",\n    api_version=\"apiVersion\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocResponse;\nimport com.swagger.petstore.models.GetApprovedByOrgSlugAndApiSlugParameters;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetApprovedByOrgSlugAndApiSlugParameters requestParameters = GetApprovedByOrgSlugAndApiSlugParameters\n      .builder()\n      .orgSlug(\"orgSlug\")\n      .apiSlug(\"apiSlug\")\n      .apiVersion(\"apiVersion\")\n      .build();\n\n    DocResponse response = testSdk.doc.getApprovedByOrgSlugAndApiSlug(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/docs/approved/all": {
      "get": {
        "operationId": "getAllApprovedByOrgSlugAndApiSlug",
        "summary": "",
        "parameters": [
          {
            "name": "orgSlug",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiSlug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Approved doc by orgSlug, apiSlug and apiVersion.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Returned when apiSlug is omitted but no apis exist for the org"
          }
        },
        "tags": [
          "Doc"
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.getAllApprovedByOrgSlugAndApiSlug({\n    orgSlug: 'orgSlug',\n    apiSlug: 'apiSlug',\n    apiVersion: 'apiVersion',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/doc\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := doc.GetAllApprovedByOrgSlugAndApiSlugRequestParams{}\nparams.SetOrgSlug(\"string\")\n\nresponse, err := client.Doc.GetAllApprovedByOrgSlugAndApiSlug(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.get_all_approved_by_org_slug_and_api_slug(\n    org_slug=\"orgSlug\",\n    api_slug=\"apiSlug\",\n    api_version=\"apiVersion\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocResponse;\nimport com.swagger.petstore.models.GetAllApprovedByOrgSlugAndApiSlugParameters;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetAllApprovedByOrgSlugAndApiSlugParameters requestParameters = GetAllApprovedByOrgSlugAndApiSlugParameters\n      .builder()\n      .orgSlug(\"orgSlug\")\n      .apiSlug(\"apiSlug\")\n      .apiVersion(\"apiVersion\")\n      .build();\n\n    List<DocResponse> response = testSdk.doc.getAllApprovedByOrgSlugAndApiSlug(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/docs": {
      "get": {
        "operationId": "findDocs",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "artifactId",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found docs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.findDocs({\n    offset: 7.86,\n    limit: 10,\n    artifactId: 1,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/doc\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := doc.FindDocsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\nparams.SetArtifactId(float64(123))\n\nresponse, err := client.Doc.FindDocs(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.find_docs(\n    offset=5.89,\n    limit=10,\n    artifact_id=1\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.FindDocsParameters;\nimport com.swagger.petstore.models.PaginatedDocResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    FindDocsParameters requestParameters = FindDocsParameters.builder().offset(7.86D).limit(10D).artifactId(1D).build();\n\n    PaginatedDocResponse response = testSdk.doc.findDocs(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "post": {
        "operationId": "createDoc",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Doc created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateDocRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createDocRequest: CreateDocRequest = {\n    fileLocation: 'https://example.com',\n    version: '1.0.0',\n    artifactId: 1,\n    apiId: 3.3,\n    previewSlug: 'previewSlug',\n  };\n\n  const { data } = await testSdk.doc.createDoc(createDocRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/doc\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := doc.CreateDocRequest{}\nrequest.SetFileLocation(\"FileLocation\")\nrequest.SetVersion(\"Version\")\nrequest.SetArtifactId(float64(123))\nrequest.SetApiId(float64(123))\nrequest.SetPreviewSlug(\"PreviewSlug\")\n\nresponse, err := client.Doc.CreateDoc(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateDocRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateDocRequest(\n    file_location=\"https://example.com\",\n    version=\"1.0.0\",\n    artifact_id=1,\n    api_id=8.57,\n    preview_slug=\"previewSlug\"\n)\n\nresult = sdk.doc.create_doc(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateDocRequest;\nimport com.swagger.petstore.models.DocCreatedResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateDocRequest createDocRequest = CreateDocRequest\n      .builder()\n      .fileLocation(\"https://example.com\")\n      .version(\"1.0.0\")\n      .artifactId(1D)\n      .apiId(3.3D)\n      .previewSlug(\"previewSlug\")\n      .build();\n\n    DocCreatedResponse response = testSdk.doc.createDoc(createDocRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/docs/{previewSlug}/approve": {
      "post": {
        "operationId": "approve",
        "summary": "",
        "parameters": [
          {
            "name": "previewSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Approves and returns doc for an API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.approve('previewSlug');\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Doc.Approve(context.Background(), \"previewSlug\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.approve(preview_slug=\"previewSlug\")\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    DocResponse response = testSdk.doc.approve(\"previewSlug\");\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/docs/{previewSlug}/unapprove": {
      "post": {
        "operationId": "unapprove",
        "summary": "",
        "parameters": [
          {
            "name": "previewSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unapproves and returns doc for an API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.unapprove('previewSlug');\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Doc.Unapprove(context.Background(), \"previewSlug\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.unapprove(preview_slug=\"previewSlug\")\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    DocResponse response = testSdk.doc.unapprove(\"previewSlug\");\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/docs/{id}": {
      "get": {
        "operationId": "getDocById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Doc by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.getDocById(8.92);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Doc.GetDocById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.get_doc_by_id(id_=3.41)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    DocResponse response = testSdk.doc.getDocById(8.92D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "delete": {
        "operationId": "removeDoc",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.removeDoc(8.99);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Doc.RemoveDoc(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.remove_doc(id_=7.32)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.doc.removeDoc(8.99D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "put": {
        "operationId": "updateDoc",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated doc",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk, UpdateDocRequest } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const updateDocRequest: UpdateDocRequest = {\n    fileLocation: 'https://example.com',\n    version: '1.0.0',\n  };\n\n  const { data } = await testSdk.doc.updateDoc(9.21, updateDocRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/doc\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := doc.UpdateDocRequest{}\nrequest.SetFileLocation(\"FileLocation\")\nrequest.SetVersion(\"Version\")\n\nresponse, err := client.Doc.UpdateDoc(context.Background(), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import UpdateDocRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = UpdateDocRequest(\n    file_location=\"https://example.com\",\n    version=\"1.0.0\"\n)\n\nresult = sdk.doc.update_doc(\n    request_body=request_body,\n    id_=5.67\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocResponse;\nimport com.swagger.petstore.models.UpdateDocRequest;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    UpdateDocRequest updateDocRequest = UpdateDocRequest\n      .builder()\n      .fileLocation(\"https://example.com\")\n      .version(\"1.0.0\")\n      .build();\n\n    DocResponse response = testSdk.doc.updateDoc(9.21D, updateDocRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/docs/{id}/getDownloadUrl": {
      "get": {
        "operationId": "getDownloadUrl",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Doc signed url for download by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocDownloadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Doc"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.doc.getDownloadUrl(3.94);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Doc.GetDownloadUrl(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.doc.get_download_url(id_=9.9)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.DocDownloadResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    DocDownloadResponse response = testSdk.doc.getDownloadUrl(3.94D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/hubspot/shadow-form": {
      "post": {
        "operationId": "sendShadowForm",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubSpotFromDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Form has been sent"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Hub Spot"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/orgs/{orgId}/subscriptions/active": {
      "get": {
        "operationId": "getActiveSubscription",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Active Subscription for org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "OrgSubscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.orgSubscriptions.getActiveSubscription(5.6);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.OrgSubscriptions.GetActiveSubscription(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_subscriptions.get_active_subscription(org_id=9.5)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.SubscriptionResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SubscriptionResponse response = testSdk.orgSubscriptions.getActiveSubscription(5.6D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/subscriptions/active/cancel": {
      "post": {
        "operationId": "cancelActiveSubscription",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancel active subscription for org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "OrgSubscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.orgSubscriptions.cancelActiveSubscription(4.92);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.OrgSubscriptions.CancelActiveSubscription(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_subscriptions.cancel_active_subscription(org_id=3.68)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.SubscriptionResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SubscriptionResponse response = testSdk.orgSubscriptions.cancelActiveSubscription(4.92D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/subscriptions/active/state": {
      "get": {
        "operationId": "getActiveSubscriptionStatus",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "State of an active subscription for org",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/FreePlanSubscriptionStateResponse"
                    },
                    {
                      "$ref": "#/components/schemas/RegularSubscriptionStateResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "OrgSubscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.orgSubscriptions.getActiveSubscriptionStatus(5.29);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.OrgSubscriptions.GetActiveSubscriptionStatus(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_subscriptions.get_active_subscription_status(org_id=0.1)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetActiveSubscriptionStatusOkResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetActiveSubscriptionStatusOkResponse response = testSdk.orgSubscriptions.getActiveSubscriptionStatus(5.29D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/subscriptions/{subscriptionId}/payment-methods/update-link": {
      "get": {
        "operationId": "getSubscriptionPaymentMethodUpdateLink",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subscriptionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "External checkout link for updating payment methods",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutLinkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "OrgSubscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/orgs/{orgId}/subscriptions/checkout/link": {
      "get": {
        "operationId": "getCheckoutLink",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "planId",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "billingInterval",
            "required": true,
            "in": "query",
            "schema": {
              "example": "year",
              "enum": [
                "month",
                "year"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "External checkout link for making a subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutLinkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "OrgSubscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getCheckoutLinkBillingInterval = 'month';\n\n  const { data } = await testSdk.orgSubscriptions.getCheckoutLink(4.04, {\n    planId: 1,\n    billingInterval: getCheckoutLinkBillingInterval,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/orgsubscriptions\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ngetCheckoutLinkBillingInterval := orgsubscriptions.GET_CHECKOUT_LINK_BILLING_INTERVAL_MONTH\n\nparams := orgsubscriptions.GetCheckoutLinkRequestParams{}\nparams.SetPlanId(float64(123))\nparams.SetBillingInterval(getCheckoutLinkBillingInterval)\n\nresponse, err := client.OrgSubscriptions.GetCheckoutLink(context.Background(), float64(12.34), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetCheckoutLinkBillingInterval\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.org_subscriptions.get_checkout_link(\n    org_id=3.66,\n    plan_id=1,\n    billing_interval=\"month\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CheckoutLinkResponse;\nimport com.swagger.petstore.models.GetCheckoutLinkBillingInterval;\nimport com.swagger.petstore.models.GetCheckoutLinkParameters;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetCheckoutLinkParameters requestParameters = GetCheckoutLinkParameters\n      .builder()\n      .planId(1D)\n      .billingInterval(GetCheckoutLinkBillingInterval.MONTH)\n      .build();\n\n    CheckoutLinkResponse response = testSdk.orgSubscriptions.getCheckoutLink(4.04D, requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/subscriptions": {
      "get": {
        "operationId": "getSubscriptionsOverview",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Subscriptions Overview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsOverviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.subscriptions.getSubscriptionsOverview();\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Subscriptions.GetSubscriptionsOverview(context.Background())\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.subscriptions.get_subscriptions_overview()\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.SubscriptionsOverviewResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SubscriptionsOverviewResponse response = testSdk.subscriptions.getSubscriptionsOverview();\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/payment-provider/stripe/webhook": {
      "post": {
        "operationId": "stripeWebhook",
        "summary": "",
        "parameters": [
          {
            "name": "stripe-signature",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event is handled successfully."
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Payment Provider"
        ]
      }
    },
    "/payment-provider/stripe/subscriptions/sync": {
      "post": {
        "operationId": "syncStripeSubscriptions",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sync is triggered successfully."
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Payment Provider"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/current-user": {
      "get": {
        "operationId": "getCurrentUser",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "createUser",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateUserRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createUserRequestSignupMethod = 'GOOGLE';\n\n  const createUserRequest: CreateUserRequest = {\n    email: 'someone@example.com',\n    password: 'Password123!',\n    firstName: 'John',\n    signupMethod: createUserRequestSignupMethod,\n    lastName: 'Doe',\n    auth0Id: 'auth0|123',\n  };\n\n  const { data } = await testSdk.user.createUser(createUserRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/user\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateUserRequestSignupMethod := user.CREATE_USER_REQUEST_SIGNUP_METHOD_GOOGLE\n\nrequest := user.CreateUserRequest{}\nrequest.SetEmail(\"Email\")\nrequest.SetPassword(\"Password\")\nrequest.SetFirstName(\"FirstName\")\nrequest.SetSignupMethod(createUserRequestSignupMethod)\nrequest.SetLastName(\"LastName\")\nrequest.SetAuth0Id(\"Auth0Id\")\n\nresponse, err := client.User.CreateUser(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateUserRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateUserRequest(\n    email=\"someone@example.com\",\n    password=\"Password123!\",\n    first_name=\"John\",\n    signup_method=\"GOOGLE\",\n    last_name=\"Doe\",\n    auth0_id=\"auth0|123\"\n)\n\nresult = sdk.user.create_user(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateUserRequest;\nimport com.swagger.petstore.models.CreateUserRequestSignupMethod;\nimport com.swagger.petstore.models.UserResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateUserRequest createUserRequest = CreateUserRequest\n      .builder()\n      .email(\"someone@example.com\")\n      .password(\"Password123!\")\n      .firstName(\"John\")\n      .signupMethod(CreateUserRequestSignupMethod.GOOGLE)\n      .lastName(\"Doe\")\n      .auth0Id(\"auth0|123\")\n      .build();\n\n    UserResponse response = testSdk.user.createUser(createUserRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "getUsers",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "orgId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "example": "john@liblab.com",
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "required": false,
            "in": "query",
            "schema": {
              "example": "John",
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "required": false,
            "in": "query",
            "schema": {
              "example": "Doe",
              "type": "string"
            }
          },
          {
            "name": "orgIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "example": "createdAt",
              "enum": [
                "createdAt",
                "updatedAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "desc",
              "example": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get All Users, With optional parameters to search by user fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const getUsersSortBy = 'createdAt';\n  const getUsersDirection = 'asc';\n\n  const { data } = await testSdk.user.getUsers({\n    offset: 4.07,\n    limit: 10,\n    orgId: 1,\n    email: 'john@liblab.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    orgIds: [2.94],\n    sortBy: getUsersSortBy,\n    direction: getUsersDirection,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/user\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := user.GetUsersRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.User.GetUsers(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import GetUsersSortBy, GetUsersDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\norg_ids=[\n    5.6\n]\n\nresult = sdk.user.get_users(\n    offset=6.37,\n    limit=10,\n    org_id=1,\n    email=\"john@liblab.com\",\n    first_name=\"John\",\n    last_name=\"Doe\",\n    org_ids=org_ids,\n    sort_by=\"createdAt\",\n    direction=\"asc\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetUsersDirection;\nimport com.swagger.petstore.models.GetUsersParameters;\nimport com.swagger.petstore.models.GetUsersSortBy;\nimport com.swagger.petstore.models.UsersResponse;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<Double> orgIds = Arrays.asList(2.94D);\n\n    GetUsersParameters requestParameters = GetUsersParameters\n      .builder()\n      .offset(4.07D)\n      .limit(10D)\n      .orgId(1D)\n      .email(\"john@liblab.com\")\n      .firstName(\"John\")\n      .lastName(\"Doe\")\n      .orgIds(orgIds)\n      .sortBy(GetUsersSortBy.CREATEDAT)\n      .direction(GetUsersDirection.ASC)\n      .build();\n\n    UsersResponse response = testSdk.user.getUsers(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User with the given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.user.getUserById(6.35);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.User.GetUserById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.user.get_user_by_id(id_=4.25)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.UserResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    UserResponse response = testSdk.user.getUserById(6.35D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "patch": {
        "operationId": "updateUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk, UpdateUserModel, UtmParams } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const utmParams: UtmParams = {\n    utmSource: 'linkedin',\n    utmMedium: 'social',\n    utmCampaign: 'ai-content',\n    utmContent: 'blog',\n    utmTerm: 'rag-with-sdks',\n  };\n\n  const updateUserModel: UpdateUserModel = {\n    email: 'someone@example.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    refreshTokenHash: 'refreshTokenHash',\n    isLiblabAdmin: true,\n    isLiblabFinanceAdmin: true,\n    isEnabled: true,\n    utmParams: utmParams,\n    auth0Id: 'auth0Id',\n  };\n\n  const { data } = await testSdk.user.updateUser(1.35, updateUserModel);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/user\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nutmParams := shared.UtmParams{}\nutmParams.SetUtmSource(\"UtmSource\")\nutmParams.SetUtmMedium(\"UtmMedium\")\nutmParams.SetUtmCampaign(\"UtmCampaign\")\nutmParams.SetUtmContent(\"UtmContent\")\nutmParams.SetUtmTerm(\"UtmTerm\")\n\nrequest := user.UpdateUserModel{}\nrequest.SetEmail(\"Email\")\nrequest.SetFirstName(\"FirstName\")\nrequest.SetLastName(\"LastName\")\nrequest.SetRefreshTokenHash(\"RefreshTokenHash\")\nrequest.SetIsLiblabAdmin(true)\nrequest.SetIsLiblabFinanceAdmin(true)\nrequest.SetIsEnabled(true)\nrequest.SetUtmParams(utmParams)\nrequest.SetAuth0Id(\"Auth0Id\")\n\nresponse, err := client.User.UpdateUser(context.Background(), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import UpdateUserModel\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = UpdateUserModel(\n    email=\"someone@example.com\",\n    first_name=\"John\",\n    last_name=\"Doe\",\n    refresh_token_hash=\"refreshTokenHash\",\n    is_liblab_admin=True,\n    is_liblab_finance_admin=True,\n    is_enabled=True,\n    utm_params={\n        \"utm_source\": \"linkedin\",\n        \"utm_medium\": \"social\",\n        \"utm_campaign\": \"ai-content\",\n        \"utm_content\": \"blog\",\n        \"utm_term\": \"rag-with-sdks\"\n    },\n    auth0_id=\"auth0Id\"\n)\n\nresult = sdk.user.update_user(\n    request_body=request_body,\n    id_=7.18\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.UpdateUserModel;\nimport com.swagger.petstore.models.UserResponse;\nimport com.swagger.petstore.models.UtmParams;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    UtmParams utmParams = UtmParams\n      .builder()\n      .utmSource(\"linkedin\")\n      .utmMedium(\"social\")\n      .utmCampaign(\"ai-content\")\n      .utmContent(\"blog\")\n      .utmTerm(\"rag-with-sdks\")\n      .build();\n\n    UpdateUserModel updateUserModel = UpdateUserModel\n      .builder()\n      .email(\"someone@example.com\")\n      .firstName(\"John\")\n      .lastName(\"Doe\")\n      .refreshTokenHash(\"refreshTokenHash\")\n      .isLiblabAdmin(true)\n      .isLiblabFinanceAdmin(true)\n      .isEnabled(true)\n      .utmParams(utmParams)\n      .auth0Id(\"auth0Id\")\n      .build();\n\n    UserResponse response = testSdk.user.updateUser(1.35D, updateUserModel);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "delete": {
        "operationId": "removeUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.user.removeUser(2.34);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.User.RemoveUser(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.user.remove_user(id_=1.95)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.user.removeUser(2.34D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/users/emails/subscriptions": {
      "patch": {
        "operationId": "updateEmailSubscription",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { EmailSubscriptionRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const emailSubscriptionRequest: EmailSubscriptionRequest = {\n    isSubscribedToEmails: true,\n  };\n\n  const { data } = await testSdk.user.updateEmailSubscription(emailSubscriptionRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/user\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := user.EmailSubscriptionRequest{}\nrequest.SetIsSubscribedToEmails(true)\n\nresponse, err := client.User.UpdateEmailSubscription(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import EmailSubscriptionRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = EmailSubscriptionRequest(\n    is_subscribed_to_emails=True\n)\n\nresult = sdk.user.update_email_subscription(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.EmailSubscriptionRequest;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    EmailSubscriptionRequest emailSubscriptionRequest = EmailSubscriptionRequest\n      .builder()\n      .isSubscribedToEmails(true)\n      .build();\n\n    testSdk.user.updateEmailSubscription(emailSubscriptionRequest);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/users/orgs": {
      "get": {
        "operationId": "getUserOrgs",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organizations a user belongs to",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.user.getUserOrgs({\n    offset: 6.89,\n    limit: 10,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/user\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := user.GetUserOrgsRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.User.GetUserOrgs(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.user.get_user_orgs(\n    offset=5.6,\n    limit=10\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetUserOrgsParameters;\nimport com.swagger.petstore.models.PaginatedOrgResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetUserOrgsParameters requestParameters = GetUserOrgsParameters.builder().offset(6.89D).limit(10D).build();\n\n    PaginatedOrgResponse response = testSdk.user.getUserOrgs(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/users/apis": {
      "get": {
        "operationId": "getUserApis",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Apis that belong to all organizations the user is a part of",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.user.getUserApis();\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.User.GetUserApis(context.Background())\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.user.get_user_apis()\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ApiResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<ApiResponse> response = testSdk.user.getUserApis();\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/snippets/{id}": {
      "get": {
        "operationId": "getSnippetsByBuildId",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Snippet by build id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnippetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Snippets"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.snippets.getSnippetsByBuildId(2.85);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Snippets.GetSnippetsByBuildId(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.snippets.get_snippets_by_build_id(id_=9.54)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.SnippetsResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SnippetsResponse response = testSdk.snippets.getSnippetsByBuildId(2.85D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/workflows": {
      "post": {
        "operationId": "uploadWorkflows",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflows spec Uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkflowsResponse"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkflowsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Workflows"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateWorkflowsRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createWorkflowsRequest: CreateWorkflowsRequest = {\n    apiId: 1,\n    workflowsSpec: new ArrayBuffer(0),\n    outputName: 'outputName',\n  };\n\n  const { data } = await testSdk.workflows.uploadWorkflows(createWorkflowsRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/workflows\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := workflows.CreateWorkflowsRequest{}\nrequest.SetApiId(float64(123))\nrequest.SetWorkflowsSpec(\"\")\nrequest.SetOutputName(\"OutputName\")\n\nresponse, err := client.Workflows.UploadWorkflows(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateWorkflowsRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateWorkflowsRequest(\n    api_id=1,\n    workflows_spec=\"workflowsSpec\",\n    output_name=\"outputName\"\n)\n\nresult = sdk.workflows.upload_workflows(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateWorkflowsRequest;\nimport com.swagger.petstore.models.CreateWorkflowsResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateWorkflowsRequest createWorkflowsRequest = CreateWorkflowsRequest\n      .builder()\n      .apiId(1D)\n      .workflowsSpec(workflowsSpec)\n      .outputName(\"outputName\")\n      .build();\n\n    CreateWorkflowsResponse response = testSdk.workflows.uploadWorkflows(createWorkflowsRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/spec-validations": {
      "post": {
        "operationId": "validateSpec",
        "summary": "",
        "description": "Validate the spec from an api",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateSpecRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A SpecValidation record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Spec Validation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/spec-validations/{id}": {
      "get": {
        "operationId": "getSpecValidation",
        "summary": "",
        "description": "Get spec validation data",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A SpecValidation record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Spec Validation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/tokens": {
      "post": {
        "operationId": "createToken",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Token"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateTokenRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createTokenRequestScope = 'SDK';\n\n  const createTokenRequest: CreateTokenRequest = {\n    name: 'My token',\n    scope: [createTokenRequestScope],\n    expiresAt: '2025-01-01T00:00:00.000Z',\n  };\n\n  const { data } = await testSdk.token.createToken(createTokenRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/token\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateTokenRequestScope := token.CREATE_TOKEN_REQUEST_SCOPE_SDK\n\nrequest := token.CreateTokenRequest{}\nrequest.SetName(\"Name\")\nrequest.SetScope([]token.CreateTokenRequestScope{createTokenRequestScope})\nrequest.SetExpiresAt(\"ExpiresAt\")\n\nresponse, err := client.Token.CreateToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateTokenRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateTokenRequest(\n    name=\"My token\",\n    scope=[\n        \"SDK\"\n    ],\n    expires_at=\"2025-01-01T00:00:00.000Z\"\n)\n\nresult = sdk.token.create_token(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateTokenRequest;\nimport com.swagger.petstore.models.CreateTokenRequestScope;\nimport com.swagger.petstore.models.CreateTokenResponse;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<CreateTokenRequestScope> scope = Arrays.asList(CreateTokenRequestScope.SDK);\n\n    CreateTokenRequest createTokenRequest = CreateTokenRequest\n      .builder()\n      .name(\"My token\")\n      .scope(scope)\n      .expiresAt(\"2025-01-01T00:00:00.000Z\")\n      .build();\n\n    CreateTokenResponse response = testSdk.token.createToken(createTokenRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "findTokensByUserId",
        "summary": "",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetTokenResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Token"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.token.findTokensByUserId({\n    userId: 1,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/token\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := token.FindTokensByUserIdRequestParams{}\nparams.SetUserId(float64(123))\n\nresponse, err := client.Token.FindTokensByUserId(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.token.find_tokens_by_user_id(user_id=1)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.FindTokensByUserIdParameters;\nimport com.swagger.petstore.models.GetTokenResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    FindTokensByUserIdParameters requestParameters = FindTokensByUserIdParameters.builder().userId(1D).build();\n\n    List<GetTokenResponse> response = testSdk.token.findTokensByUserId(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/auth/tokens/{id}": {
      "get": {
        "operationId": "getTokenById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Token"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.token.getTokenById(3.22);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Token.GetTokenById(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.token.get_token_by_id(id_=9.49)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetTokenResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetTokenResponse response = testSdk.token.getTokenById(3.22D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "delete": {
        "operationId": "removeToken",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Token"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.token.removeToken(4.73);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Token.RemoveToken(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.token.remove_token(id_=9.67)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    testSdk.token.removeToken(4.73D);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/invitations/org/{orgId}/invite": {
      "post": {
        "operationId": "createOrgInvite",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrgInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Invite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invitation"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateOrgInvitationRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createOrgInvitationRequest: CreateOrgInvitationRequest = {\n    email: 'harry@liblab.com',\n  };\n\n  const { data } = await testSdk.invitation.createOrgInvite(8.91, createOrgInvitationRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/invitation\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := invitation.CreateOrgInvitationRequest{}\nrequest.SetEmail(\"Email\")\n\nresponse, err := client.Invitation.CreateOrgInvite(context.Background(), float64(12.34), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateOrgInvitationRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateOrgInvitationRequest(\n    email=\"harry@liblab.com\"\n)\n\nresult = sdk.invitation.create_org_invite(\n    request_body=request_body,\n    org_id=2.53\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateOrgInvitationRequest;\nimport com.swagger.petstore.models.InvitationResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateOrgInvitationRequest createOrgInvitationRequest = CreateOrgInvitationRequest\n      .builder()\n      .email(\"harry@liblab.com\")\n      .build();\n\n    InvitationResponse response = testSdk.invitation.createOrgInvite(8.91D, createOrgInvitationRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/invitations/{inviteCode}/redeem": {
      "patch": {
        "operationId": "redeemInvite",
        "summary": "",
        "parameters": [
          {
            "name": "inviteCode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redeemed invite details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invitation"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.invitation.redeemInvite('inviteCode');\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Invitation.RedeemInvite(context.Background(), \"inviteCode\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.invitation.redeem_invite(invite_code=\"inviteCode\")\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.InvitationResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    InvitationResponse response = testSdk.invitation.redeemInvite(\"inviteCode\");\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/invitations/{inviteCode}/decline": {
      "patch": {
        "operationId": "declineInvite",
        "summary": "",
        "parameters": [
          {
            "name": "inviteCode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Declined invite details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invitation"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.invitation.declineInvite('inviteCode');\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Invitation.DeclineInvite(context.Background(), \"inviteCode\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.invitation.decline_invite(invite_code=\"inviteCode\")\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.InvitationResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    InvitationResponse response = testSdk.invitation.declineInvite(\"inviteCode\");\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/invitations/received": {
      "get": {
        "operationId": "getReceivedInvites",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Received Invites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgInvitesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invitation"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.invitation.getReceivedInvites({\n    offset: 8.56,\n    limit: 10,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/invitation\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := invitation.GetReceivedInvitesRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Invitation.GetReceivedInvites(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.invitation.get_received_invites(\n    offset=3.72,\n    limit=10\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetReceivedInvitesParameters;\nimport com.swagger.petstore.models.PaginatedOrgInvitesResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetReceivedInvitesParameters requestParameters = GetReceivedInvitesParameters\n      .builder()\n      .offset(8.56D)\n      .limit(10D)\n      .build();\n\n    PaginatedOrgInvitesResponse response = testSdk.invitation.getReceivedInvites(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/invitations/sent": {
      "get": {
        "operationId": "getSentInvites",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sent Invites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgInvitesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invitation"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.invitation.getSentInvites({\n    offset: 9.3,\n    limit: 10,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/invitation\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := invitation.GetSentInvitesRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Invitation.GetSentInvites(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.invitation.get_sent_invites(\n    offset=6.53,\n    limit=10\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.GetSentInvitesParameters;\nimport com.swagger.petstore.models.PaginatedOrgInvitesResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    GetSentInvitesParameters requestParameters = GetSentInvitesParameters.builder().offset(9.3D).limit(10D).build();\n\n    PaginatedOrgInvitesResponse response = testSdk.invitation.getSentInvites(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/invitations/search": {
      "get": {
        "operationId": "searchInvites",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "orgName",
            "required": false,
            "in": "query",
            "description": "Name of the organization",
            "schema": {
              "example": "liblab",
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status of the invitation",
            "schema": {
              "example": "PENDING",
              "enum": [
                "PENDING",
                "REDEEMED",
                "ACCEPTED",
                "EXPIRED",
                "DECLINED",
                "REVOKED"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "default": "createdAt",
              "example": "createdAt",
              "enum": [
                "orgName",
                "status",
                "createdAt",
                "updatedAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "description": "Direction to sort by",
            "schema": {
              "default": "desc",
              "example": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgInvitesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invitation"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const searchInvitesStatus = 'PENDING';\n  const searchInvitesSortBy = 'orgName';\n  const searchInvitesDirection = 'asc';\n\n  const { data } = await testSdk.invitation.searchInvites({\n    offset: 8.56,\n    limit: 10,\n    orgName: 'liblab',\n    status: searchInvitesStatus,\n    sortBy: searchInvitesSortBy,\n    direction: searchInvitesDirection,\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/invitation\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := invitation.SearchInvitesRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\n\nresponse, err := client.Invitation.SearchInvites(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import SearchInvitesStatus, SearchInvitesSortBy, SearchInvitesDirection\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.invitation.search_invites(\n    offset=3.75,\n    limit=10,\n    org_name=\"liblab\",\n    status=\"PENDING\",\n    sort_by=\"orgName\",\n    direction=\"asc\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.PaginatedOrgInvitesResponse;\nimport com.swagger.petstore.models.SearchInvitesDirection;\nimport com.swagger.petstore.models.SearchInvitesParameters;\nimport com.swagger.petstore.models.SearchInvitesSortBy;\nimport com.swagger.petstore.models.SearchInvitesStatus;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SearchInvitesParameters requestParameters = SearchInvitesParameters\n      .builder()\n      .offset(8.56D)\n      .limit(10D)\n      .orgName(\"liblab\")\n      .status(SearchInvitesStatus.PENDING)\n      .sortBy(SearchInvitesSortBy.ORGNAME)\n      .direction(SearchInvitesDirection.ASC)\n      .build();\n\n    PaginatedOrgInvitesResponse response = testSdk.invitation.searchInvites(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/invitations/{inviteCode}": {
      "get": {
        "operationId": "getInviteByCode",
        "summary": "",
        "parameters": [
          {
            "name": "inviteCode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found Invite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invitation"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.invitation.getInviteByCode('inviteCode');\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Invitation.GetInviteByCode(context.Background(), \"inviteCode\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.invitation.get_invite_by_code(invite_code=\"inviteCode\")\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.InvitationResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    InvitationResponse response = testSdk.invitation.getInviteByCode(\"inviteCode\");\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/auth0/reset-password": {
      "post": {
        "operationId": "resetPasswordAuth0",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Reset password email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth0ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth0"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth0/passwordless/verify-password": {
      "post": {
        "operationId": "PasswordlessVerifyPassword",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyPasswordResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth0"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth0/passwordless/setup-password": {
      "post": {
        "operationId": "PasswordlessSetupPassword",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordSetupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password setup completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Password setup completed successfully"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth0"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/plans/enabled": {
      "get": {
        "operationId": "getEnabledPlans",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Enabled Plans",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Plan"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.plan.getEnabledPlans();\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Plan.GetEnabledPlans(context.Background())\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.plan.get_enabled_plans()\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.PlanResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<PlanResponse> response = testSdk.plan.getEnabledPlans();\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/orgs/{orgId}/invoices": {
      "get": {
        "operationId": "getOrgInvoices",
        "summary": "",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoices for org",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgInvoicesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Invoice"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.invoice.getOrgInvoices(3.13);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\nresponse, err := client.Invoice.GetOrgInvoices(context.Background(), float64(12.34))\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.invoice.get_org_invoices(org_id=3.64)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.OrgInvoicesResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    OrgInvoicesResponse response = testSdk.invoice.getOrgInvoices(3.13D);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/health-check": {
      "get": {
        "operationId": "HealthCheckController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Health check",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "default": {
            "description": "Server error"
          }
        },
        "tags": [
          "Health Check"
        ]
      }
    },
    "/tags": {
      "post": {
        "operationId": "create",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity that has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateTagRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createTagRequest: CreateTagRequest = {\n    name: 'tag',\n  };\n\n  const { data } = await testSdk.tags.create(createTagRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/tags\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := tags.CreateTagRequest{}\nrequest.SetName(\"Name\")\n\nresponse, err := client.Tags.Create(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateTagRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateTagRequest(\n    name=\"tag\"\n)\n\nresult = sdk.tags.create(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateTagRequest;\nimport com.swagger.petstore.models.TagResponse;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateTagRequest createTagRequest = CreateTagRequest.builder().name(\"tag\").build();\n\n    TagResponse response = testSdk.tags.create(createTagRequest);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      },
      "get": {
        "operationId": "search",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "searchQuery",
            "required": true,
            "in": "query",
            "schema": {
              "example": "abc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search for tags matching a search query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.tags.search({\n    offset: 2.5,\n    limit: 10,\n    searchQuery: 'abc',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/tags\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := tags.SearchRequestParams{}\nparams.SetOffset(float64(123))\nparams.SetLimit(float64(123))\nparams.SetSearchQuery(\"string\")\n\nresponse, err := client.Tags.Search(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.tags.search(\n    offset=9.59,\n    limit=10,\n    search_query=\"abc\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.SearchParameters;\nimport com.swagger.petstore.models.TagResponse;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    SearchParameters requestParameters = SearchParameters.builder().offset(2.5D).limit(10D).searchQuery(\"abc\").build();\n\n    List<TagResponse> response = testSdk.tags.search(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/ai/chat": {
      "get": {
        "operationId": "queryDocuments",
        "summary": "Query documents",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "apiSlug",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sdkLanguage",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "AI"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const { data } = await testSdk.ai.queryDocuments({\n    orgId: 7.79,\n    apiSlug: 'apiSlug',\n    apiVersion: 'apiVersion',\n    sdkLanguage: 'sdkLanguage',\n    q: 'q',\n  });\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/ai\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nparams := ai.QueryDocumentsRequestParams{}\nparams.SetOrgId(float64(123))\nparams.SetApiSlug(\"string\")\nparams.SetApiVersion(\"string\")\nparams.SetSdkLanguage(\"string\")\nparams.SetQ(\"string\")\n\nresponse, err := client.Ai.QueryDocuments(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nresult = sdk.ai.query_documents(\n    org_id=2.21,\n    api_slug=\"apiSlug\",\n    api_version=\"apiVersion\",\n    sdk_language=\"sdkLanguage\",\n    q=\"q\"\n)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.ChatResponseDto;\nimport com.swagger.petstore.models.QueryDocumentsParameters;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    QueryDocumentsParameters requestParameters = QueryDocumentsParameters\n      .builder()\n      .orgId(7.79D)\n      .apiSlug(\"apiSlug\")\n      .apiVersion(\"apiVersion\")\n      .sdkLanguage(\"sdkLanguage\")\n      .q(\"q\")\n      .build();\n\n    ChatResponseDto response = testSdk.ai.queryDocuments(requestParameters);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/feedback": {
      "post": {
        "operationId": "sendFeedback",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserFeedbackRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Feedback"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateUserFeedbackRequest, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createUserFeedbackRequest: CreateUserFeedbackRequest = {\n    title: 'title',\n    message: 'message',\n  };\n\n  const { data } = await testSdk.feedback.sendFeedback(createUserFeedbackRequest);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/feedback\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\n\nrequest := feedback.CreateUserFeedbackRequest{}\nrequest.SetTitle(\"Title\")\nrequest.SetMessage(\"Message\")\n\nresponse, err := client.Feedback.SendFeedback(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateUserFeedbackRequest\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateUserFeedbackRequest(\n    title=\"title\",\n    message=\"message\"\n)\n\nresult = sdk.feedback.send_feedback(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateUserFeedbackRequest;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    CreateUserFeedbackRequest createUserFeedbackRequest = CreateUserFeedbackRequest\n      .builder()\n      .title(\"title\")\n      .message(\"message\")\n      .build();\n\n    testSdk.feedback.sendFeedback(createUserFeedbackRequest);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/user-events": {
      "get": {
        "operationId": "getUserEvents",
        "summary": "",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "example": "sb@liblab.com",
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "timestamp",
              "example": "timestamp",
              "enum": [
                "timestamp"
              ],
              "type": "string"
            }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "schema": {
              "default": "desc",
              "example": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "orgIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "eventIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get All User Events, With optional parameters to filter by user event fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User Event"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user-events/export-to-csv": {
      "get": {
        "operationId": "exportUserEventsToCsv",
        "summary": "",
        "parameters": [
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "example": "sb@liblab.com",
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "filename",
            "required": false,
            "in": "query",
            "schema": {
              "example": "user-events.csv",
              "type": "string"
            }
          },
          {
            "name": "orgIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "eventIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exports user events to a csv file.",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User Event"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user-events/track-user-publish-pr-event": {
      "post": {
        "operationId": "trackUserPublishPrEvent",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUserPublishPrRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tracks user publish pr events (success or failure)"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User Event"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/third-party-applications": {
      "get": {
        "operationId": "ThirdPartyApplicationsController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "liblab third party applications from auth0",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThirdPartyApplicationResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "third-party-applications"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ThirdPartyApplicationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThirdPartyApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Third party application created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "third-party-applications"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/third-party-applications/{id}": {
      "get": {
        "operationId": "ThirdPartyApplicationsController_getByOrgId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Org's third party applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetOrdThirdPartyResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "third-party-applications"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ThirdPartyApplicationsController_deleteById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "third-party-applications"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/integrations/builds": {
      "post": {
        "operationId": "createIntegrationBuild",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegrationBuildDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created integration build",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationBuildResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Integration"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "x-codeSamples": [
          {
            "source": "import { CreateIntegrationBuildDto, TestSdk } from 'test-sdk';\n\n(async () => {\n  const testSdk = new TestSdk({\n    token: 'YOUR_TOKEN',\n  });\n\n  const createIntegrationBuildDtoLanguages = 'java';\n\n  const createIntegrationBuildDto: CreateIntegrationBuildDto = {\n    sdkName: 'sdkName',\n    languages: [createIntegrationBuildDtoLanguages],\n    userEmail: 'userEmail',\n    liblabConfig: {},\n    spec: new ArrayBuffer(0),\n  };\n\n  const { data } = await testSdk.integration.createIntegrationBuild(createIntegrationBuildDto);\n\n  console.log(data);\n})();\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "TypeScript"
          },
          {
            "source": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdkconfig\"\n  \"github.com/swagger-api/swagger-petstore/pkg/testsdk\"\n  \"github.com/swagger-api/swagger-petstore/pkg/integration\"\n)\n\nconfig := testsdkconfig.NewConfig()\nclient := testsdk.NewTestSdk(config)\n\ncreateIntegrationBuildDtoLanguages := integration.CREATE_INTEGRATION_BUILD_DTO_LANGUAGES_JAVA\n\nrequest := integration.CreateIntegrationBuildDto{}\nrequest.SetSdkName(\"SdkName\")\nrequest.SetLanguages([]integration.CreateIntegrationBuildDtoLanguages{createIntegrationBuildDtoLanguages})\nrequest.SetUserEmail(\"UserEmail\")\nrequest.SetLiblabConfig(\"string\")\nrequest.SetSpec(\"\")\n\nresponse, err := client.Integration.CreateIntegrationBuild(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Go"
          },
          {
            "source": "from test_sdk import TestSdk\nfrom test_sdk.models import CreateIntegrationBuildDto\n\nsdk = TestSdk(\n    access_token=\"YOUR_ACCESS_TOKEN\",\n    timeout=10000\n)\n\nrequest_body = CreateIntegrationBuildDto(\n    sdk_name=\"sdkName\",\n    languages=[\n        \"java\"\n    ],\n    user_email=\"userEmail\",\n    liblab_config={},\n    spec=\"spec\"\n)\n\nresult = sdk.integration.create_integration_build(request_body=request_body)\n\nprint(result)\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Python"
          },
          {
            "source": "import com.swagger.petstore.TestSdk;\nimport com.swagger.petstore.config.TestSdkConfig;\nimport com.swagger.petstore.models.CreateIntegrationBuildDto;\nimport com.swagger.petstore.models.CreateIntegrationBuildDtoLanguages;\nimport com.swagger.petstore.models.IntegrationBuildResponseDto;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    TestSdkConfig config = TestSdkConfig.builder().accessToken(\"YOUR_ACCESS_TOKEN\").build();\n\n    TestSdk testSdk = new TestSdk(config);\n\n    List<CreateIntegrationBuildDtoLanguages> languages = Arrays.asList(CreateIntegrationBuildDtoLanguages.JAVA);\n\n    CreateIntegrationBuildDto createIntegrationBuildDto = CreateIntegrationBuildDto\n      .builder()\n      .sdkName(\"sdkName\")\n      .languages(languages)\n      .userEmail(\"userEmail\")\n      .liblabConfig(new Object())\n      .spec(spec)\n      .build();\n\n    IntegrationBuildResponseDto response = testSdk.integration.createIntegrationBuild(createIntegrationBuildDto);\n\n    System.out.println(response);\n  }\n}\n\n```\n\n<!-- This file was generated by liblab | https://liblab.com/",
            "lang": "Java"
          }
        ]
      }
    },
    "/spec-fixer/{id}/fix": {
      "post": {
        "operationId": "fixSpec",
        "summary": "",
        "description": "Fix spec file errors for the given spec validation id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecFixerResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "The fixed spec file"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Spec Fixer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Api",
    "description": "",
    "version": "0.1.361",
    "contact": {}
  },
  "tags": [
    {
      "name": "Org",
      "description": ""
    },
    {
      "name": "Build",
      "description": ""
    },
    {
      "name": "User",
      "description": ""
    },
    {
      "name": "Doc",
      "description": ""
    },
    {
      "name": "Invitation",
      "description": ""
    },
    {
      "name": "Auth0",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateBuildRequest": {
        "type": "object",
        "properties": {
          "apiId": {
            "type": "number",
            "example": 1
          },
          "baseUrl": {
            "type": "string",
            "example": "https://api-dev.liblab.com"
          },
          "sdkName": {
            "type": "string",
            "example": "liblab"
          },
          "sdkVersion": {
            "type": "string",
            "example": "1.0.0"
          },
          "languages": {
            "type": "array",
            "example": [
              "typescript"
            ],
            "items": {
              "type": "string",
              "enum": [
                "java",
                "python",
                "typescript",
                "csharp",
                "go",
                "terraform",
                "swift",
                "php"
              ]
            }
          },
          "auth": {
            "type": "array",
            "example": [
              "bearer"
            ],
            "items": {
              "type": "string",
              "enum": [
                "apikey",
                "basic",
                "bearer",
                "custom"
              ]
            }
          },
          "docs": {
            "type": "array",
            "example": [
              "enhancedApiSpec",
              "snippets",
              "api"
            ],
            "items": {
              "type": "string",
              "enum": [
                "enhancedApiSpec",
                "snippets",
                "api"
              ]
            }
          },
          "hooks": {
            "type": "string",
            "format": "binary"
          },
          "customQueries": {
            "type": "string",
            "format": "binary"
          },
          "liblabVersion": {
            "type": "string",
            "pattern": "/^\\d+$/",
            "example": "2",
            "default": "1"
          },
          "deliveryMethods": {
            "default": [
              "zip"
            ],
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "files",
                "zip",
                "tar",
                "github",
                "json",
                "none"
              ]
            },
            "example": [
              "zip"
            ]
          },
          "buildType": {
            "type": "array",
            "default": [
              "SDK"
            ],
            "example": [
              "SDK",
              "DOC"
            ],
            "items": {
              "type": "string",
              "enum": [
                "SNIPPETS",
                "DOC",
                "SDK"
              ]
            }
          },
          "params": {
            "type": "string",
            "example": "{\"auth\":[\"bearer\"],\"pypiPackageName\":\"liblab_py\",\"groupId\":\"liblabJavaGroupId\",\"retry\":{\"enabled\":true,\"maxAttempts\":3,\"retryDelay\":5},\"licensePath\":\"https://api-dev.liblab.com/license\",\"license\":{\"type\":\"MIT\",\"name\":\"my-license\",\"url\":\"https://api-dev.liblab.com/license\"},\"refreshToken\":{\"endpoint\":\"/auth/refresh-token\",\"bearerKey\":\"accessToken\",\"refreshKey\":\"refreshToken\"},\"hookDependencies\":[{\"name\":\"hookDependency\",\"version\":\"1.0.0\",\"groupId\":\"liblab\"}],\"injectedModels\":[\"DontInjectThisModel\"],\"ignoreFiles\":[\"README.md\"]}"
          },
          "rawConfig": {
            "type": "string",
            "nullable": true,
            "description": "The raw liblab.config.json file contents"
          }
        },
        "required": [
          "apiId",
          "sdkName",
          "sdkVersion",
          "languages",
          "deliveryMethods",
          "buildType"
        ]
      },
      "TagResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "abc"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "DocResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "fileLocation": {
            "type": "string",
            "example": "http://file.location"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "artifactId": {
            "type": "number",
            "example": 1
          },
          "buildId": {
            "type": "number",
            "example": 1
          },
          "previewSlug": {
            "type": "string",
            "example": "16135595-a691-4f9c-aa8b-d0a5504283e6",
            "nullable": true
          },
          "previewUrl": {
            "type": "string",
            "example": "https://docs.liblab.com/liblab/preview/16135595-a691-4f9c-aa8b-d0a5504283e6",
            "nullable": true
          },
          "approvedDocUrl": {
            "type": "string",
            "example": "https://docs.liblab.com/liblab/api/1.0.0",
            "nullable": true
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "major": {
            "type": "number",
            "example": 1
          },
          "minor": {
            "type": "number",
            "example": 1
          },
          "patch": {
            "type": "number",
            "example": 1
          },
          "tag": {
            "type": "string",
            "example": "1.0",
            "nullable": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "fileLocation",
          "version",
          "artifactId",
          "previewSlug",
          "createdById",
          "updatedById",
          "major",
          "minor",
          "patch"
        ]
      },
      "SdkResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "language": {
            "type": "string",
            "enum": [
              "JAVA",
              "PYTHON",
              "TYPESCRIPT",
              "CSHARP",
              "GO",
              "TERRAFORM",
              "SWIFT",
              "PHP"
            ],
            "example": "JAVA"
          },
          "fileLocation": {
            "type": "string",
            "example": "https://my-bucket.cloud/file"
          },
          "version": {
            "type": "string",
            "example": "1.0"
          },
          "artifactId": {
            "type": "number",
            "example": 1
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "major": {
            "type": "number",
            "example": 1
          },
          "minor": {
            "type": "number",
            "example": 1
          },
          "patch": {
            "type": "number",
            "example": 1
          },
          "tag": {
            "type": "string",
            "example": "1.0",
            "nullable": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "language",
          "fileLocation",
          "version",
          "artifactId",
          "createdById",
          "updatedById",
          "major",
          "minor",
          "patch",
          "tag"
        ]
      },
      "ArtifactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "artifactType": {
            "type": "string",
            "enum": [
              "SDK",
              "DOC",
              "LOG",
              "ZIP",
              "ENRICHED_SPEC",
              "ENHANCED_API_SPEC"
            ],
            "example": "SDK"
          },
          "artifactUrl": {
            "type": "string",
            "example": "http://artifact.url"
          },
          "buildId": {
            "type": "number",
            "example": 1
          },
          "doc": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DocResponse"
              }
            ]
          },
          "sdk": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SdkResponse"
              }
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "FAIL",
              "SUCCESS"
            ],
            "example": "SUCCESS"
          },
          "error": {
            "type": "string",
            "example": "Something went wrong!",
            "nullable": true
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "artifactType",
          "buildId",
          "status",
          "error",
          "createdById",
          "updatedById",
          "isApproved"
        ]
      },
      "BuildResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "enum": [
              "SUCCESS",
              "IN_PROGRESS",
              "FAILURE"
            ]
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z",
            "nullable": true
          },
          "apiId": {
            "type": "number",
            "example": 1
          },
          "buildType": {
            "type": "array",
            "example": [
              "DOC"
            ],
            "items": {
              "type": "string",
              "enum": [
                "SNIPPETS",
                "DOC",
                "SDK"
              ]
            }
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtifactResponse"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "duration": {
            "type": "number",
            "example": 1,
            "description": "duration of build in milliseconds",
            "nullable": true
          },
          "buildLabel": {
            "type": "string",
            "example": "b1"
          },
          "major": {
            "type": "number",
            "example": 1,
            "description": "Major version number"
          },
          "minor": {
            "type": "number",
            "example": 0,
            "description": "Minor version number"
          },
          "patch": {
            "type": "number",
            "example": 0,
            "description": "Patch version number"
          },
          "tag": {
            "type": "string",
            "example": "alpha",
            "description": "Prerelease tag of the version number"
          },
          "specUrl": {
            "type": "string",
            "example": "www.my-spec.com/json",
            "description": "api's openAPI spec"
          },
          "rawConfig": {
            "type": "object",
            "nullable": true,
            "description": "The raw config object used in the build"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "status",
          "startTime",
          "endTime",
          "apiId",
          "buildType",
          "createdById",
          "updatedById",
          "duration",
          "buildLabel",
          "specUrl"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "AccessAuth": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "string"
          }
        }
      },
      "ApiKeyAuth": {
        "type": "object",
        "properties": {
          "header": {
            "type": "string"
          }
        }
      },
      "BasicAuth": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "Authentication": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/AccessAuth"
          },
          "apiKey": {
            "$ref": "#/components/schemas/ApiKeyAuth"
          },
          "basic": {
            "$ref": "#/components/schemas/BasicAuth"
          }
        }
      },
      "SimpleBuildRequest": {
        "type": "object",
        "properties": {
          "apiId": {
            "type": "number",
            "example": 1
          },
          "baseUrl": {
            "type": "string",
            "example": "https://api-dev.liblab.com"
          },
          "sdkName": {
            "type": "string",
            "example": "liblab"
          },
          "sdkVersion": {
            "type": "string",
            "example": "1.0.0"
          },
          "languages": {
            "type": "array",
            "example": [
              "typescript"
            ],
            "items": {
              "type": "string",
              "enum": [
                "java",
                "python",
                "typescript",
                "csharp",
                "go",
                "terraform",
                "swift",
                "php"
              ]
            }
          },
          "docs": {
            "type": "array",
            "example": [
              "enhancedApiSpec",
              "snippets",
              "api"
            ],
            "items": {
              "type": "string",
              "enum": [
                "enhancedApiSpec",
                "snippets",
                "api"
              ]
            }
          },
          "liblabVersion": {
            "type": "string",
            "default": "2",
            "pattern": "/^\\d+$/",
            "example": "2"
          },
          "authentication": {
            "$ref": "#/components/schemas/Authentication"
          }
        },
        "required": [
          "apiId",
          "sdkName",
          "sdkVersion",
          "languages"
        ]
      },
      "CreateBuildEnhancedApiRequest": {
        "type": "object",
        "properties": {
          "enhancedApiSpecFile": {
            "type": "string",
            "format": "binary"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "enum": [
              "FAIL",
              "SUCCESS"
            ]
          },
          "type": {
            "type": "string",
            "example": "ENHANCED_API_SPEC",
            "enum": [
              "ENHANCED_API_SPEC"
            ]
          },
          "error": {
            "type": "string",
            "example": "Failed to generate due to missing permissions"
          }
        },
        "required": [
          "status",
          "type"
        ]
      },
      "PaginatedBuildResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "BuildStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "enum": [
              "SUCCESS",
              "IN_PROGRESS",
              "FAILURE"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "BuildUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Doe"
          },
          "lastName": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email"
        ]
      },
      "GetBuildByIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "enum": [
              "SUCCESS",
              "IN_PROGRESS",
              "FAILURE"
            ]
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z",
            "nullable": true
          },
          "apiId": {
            "type": "number",
            "example": 1
          },
          "buildType": {
            "type": "array",
            "example": [
              "DOC"
            ],
            "items": {
              "type": "string",
              "enum": [
                "SNIPPETS",
                "DOC",
                "SDK"
              ]
            }
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtifactResponse"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "duration": {
            "type": "number",
            "example": 1,
            "description": "duration of build in milliseconds",
            "nullable": true
          },
          "buildLabel": {
            "type": "string",
            "example": "b1"
          },
          "major": {
            "type": "number",
            "example": 1,
            "description": "Major version number"
          },
          "minor": {
            "type": "number",
            "example": 0,
            "description": "Minor version number"
          },
          "patch": {
            "type": "number",
            "example": 0,
            "description": "Patch version number"
          },
          "tag": {
            "type": "string",
            "example": "alpha",
            "description": "Prerelease tag of the version number"
          },
          "specUrl": {
            "type": "string",
            "example": "www.my-spec.com/json",
            "description": "api's openAPI spec"
          },
          "user": {
            "example": {
              "firstName": "Doe",
              "lastName": "John",
              "email": "test@gmail.com"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildUser"
              }
            ]
          },
          "rawConfig": {
            "type": "object",
            "nullable": true,
            "description": "The raw config object used in the build"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "status",
          "startTime",
          "endTime",
          "apiId",
          "buildType",
          "createdById",
          "updatedById",
          "duration",
          "buildLabel",
          "specUrl"
        ]
      },
      "PaginatedSdkResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "PaginatedDocResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "CreateApiRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My api"
          },
          "version": {
            "type": "string",
            "example": "1.0"
          },
          "orgId": {
            "type": "number",
            "example": 1
          },
          "spec": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "name",
          "version",
          "spec"
        ]
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "name": {
            "type": "string",
            "example": "My api"
          },
          "slug": {
            "type": "string",
            "example": "my-api"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "orgId": {
            "type": "number",
            "example": 1
          },
          "approvedDocId": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "latestBuildAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "resourceId": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "uploadedSpecId": {
            "type": "number"
          },
          "uploadedSpec": {
            "type": "object"
          },
          "workflowsSpecId": {
            "type": "number"
          },
          "workflowsSpec": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "slug",
          "version",
          "orgId",
          "approvedDocId",
          "createdById",
          "updatedById",
          "latestBuildAt",
          "uploadedSpecId",
          "uploadedSpec",
          "workflowsSpecId",
          "workflowsSpec"
        ]
      },
      "FilterItemResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "1"
          },
          "label": {
            "type": "string",
            "example": "filter label"
          }
        },
        "required": [
          "value",
          "label"
        ]
      },
      "GetApisFilters": {
        "type": "object",
        "properties": {
          "orgIds": {
            "example": [
              {
                "label": "Org1",
                "value": "1"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterItemResponse"
            }
          }
        },
        "required": [
          "orgIds"
        ]
      },
      "ApisSearchPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "filters": {
            "example": {
              "orgIds": [
                {
                  "label": "Org1",
                  "value": "1"
                }
              ]
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/GetApisFilters"
              }
            ]
          }
        },
        "required": [
          "count",
          "pages",
          "filters",
          "data"
        ]
      },
      "UpdateApiRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My api name"
          },
          "version": {
            "type": "string",
            "example": "1.0.1"
          }
        }
      },
      "OrgMemberData": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@liblab.com"
          },
          "firstName": {
            "type": "string",
            "example": "John",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "nullable": true
          },
          "isEmailVerified": {
            "type": "boolean",
            "example": true,
            "nullable": true
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "isEmailVerified"
        ]
      },
      "OrgResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "name": {
            "type": "string",
            "example": "My org"
          },
          "description": {
            "type": "string",
            "example": "My description",
            "nullable": true
          },
          "website": {
            "type": "string",
            "example": "www.my-org.com"
          },
          "domain": {
            "type": "string",
            "example": "my-org.com"
          },
          "slug": {
            "type": "string",
            "example": "my-org"
          },
          "isAllowedForBeta": {
            "type": "boolean",
            "example": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true,
            "example": "https://liblab.com/images/logo.png"
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "openSourceProjectUrl": {
            "type": "string",
            "example": "https://github.com/liblaber/api",
            "nullable": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "website",
          "domain",
          "slug",
          "isAllowedForBeta",
          "logoUrl",
          "createdById",
          "updatedById",
          "openSourceProjectUrl"
        ]
      },
      "OrgMemberResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "orgId": {
            "type": "number",
            "example": 1
          },
          "userId": {
            "type": "number",
            "example": 1
          },
          "member": {
            "example": {
              "email": "admin@liblab.com",
              "firstName": "John",
              "lastName": "Doe",
              "isEmailVerified": true
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/OrgMemberData"
              }
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "MEMBER",
              "SUPER_ADMIN"
            ],
            "example": "ADMIN"
          },
          "isEnabled": {
            "type": "boolean",
            "example": true
          },
          "org": {
            "example": "org",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrgResponse"
              }
            ]
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "orgId",
          "userId",
          "role",
          "isEnabled",
          "createdById",
          "updatedById"
        ]
      },
      "CreateOrgRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Example Org"
          },
          "description": {
            "type": "string",
            "example": "Example Org Description"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "domain": {
            "type": "string",
            "example": "business.com"
          },
          "logoUrl": {
            "type": "string",
            "example": "https://liblab.com/images/logo.png"
          }
        },
        "required": [
          "name"
        ]
      },
      "FreePlanSubscriptionStateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "free"
            ],
            "example": "free",
            "description": "The status of the free plan subscription."
          },
          "usedCredits": {
            "type": "number",
            "description": "Number of credits used from the free trial subscription",
            "example": 10
          },
          "remainingCredits": {
            "type": "number",
            "description": "Number of credits remaining in the free trial subscription",
            "example": 15
          }
        },
        "required": [
          "status",
          "usedCredits",
          "remainingCredits"
        ]
      },
      "RegularSubscriptionStateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "active"
            ],
            "example": "active",
            "description": "The status of the regular subscription."
          }
        },
        "required": [
          "status"
        ]
      },
      "PlanResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "billingType": {
            "type": "string",
            "enum": [
              "FREE",
              "AUTO_BILLABLE",
              "MANUAL",
              "INTERNAL"
            ],
            "example": "FREE",
            "description": "The billing type of the plan"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "name": {
            "type": "string",
            "example": "Pro"
          },
          "description": {
            "type": "string",
            "example": "This plan is for pro users."
          },
          "defaultMonthPrice": {
            "type": "number",
            "example": 999,
            "description": "The default price for a month.",
            "nullable": true
          },
          "defaultYearPrice": {
            "type": "number",
            "example": 10200,
            "description": "The default price for a year.",
            "nullable": true
          },
          "currency": {
            "enum": [
              "usd",
              "credits"
            ],
            "type": "string",
            "example": "usd",
            "description": "The currency of the prices"
          }
        },
        "required": [
          "id",
          "billingType",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "defaultMonthPrice",
          "defaultYearPrice",
          "currency"
        ]
      },
      "SubscriptionPriceResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": 9.99
          },
          "currency": {
            "enum": [
              "usd",
              "credits"
            ],
            "type": "string",
            "example": "usd"
          },
          "interval": {
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "example": "month",
            "description": "The interval of the billing cycle"
          }
        },
        "required": [
          "amount",
          "currency",
          "interval"
        ]
      },
      "CardResponse": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "example": "visa"
          },
          "last4": {
            "type": "string",
            "example": "4242"
          }
        },
        "required": [
          "brand",
          "last4"
        ]
      },
      "CardMethodResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "card"
            ],
            "example": "card"
          },
          "card": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardResponse"
              }
            ]
          }
        },
        "required": [
          "type",
          "card"
        ]
      },
      "BankAccountResponse": {
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string",
            "example": "Bank of America"
          },
          "last4": {
            "type": "string",
            "example": "1234"
          }
        },
        "required": [
          "bankName",
          "last4"
        ]
      },
      "UsBankAccountMethodResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "us_bank_account"
            ],
            "example": "us_bank_account"
          },
          "usBankAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BankAccountResponse"
              }
            ]
          }
        },
        "required": [
          "type",
          "usBankAccount"
        ]
      },
      "AddressResponse": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City, district, suburb, town, or village.",
            "example": "Austin"
          },
          "country": {
            "type": "string",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)",
            "example": "US"
          },
          "line1": {
            "type": "string",
            "description": "Address line 1 (e.g., street, PO Box, or company name)",
            "example": "123 Main Street"
          },
          "line2": {
            "type": "string",
            "description": "Address line 2 (e.g., apartment, suite, unit, or building)",
            "example": "Apt 123"
          },
          "postalCode": {
            "type": "string",
            "description": "ZIP or postal code",
            "example": "78701"
          },
          "state": {
            "type": "string",
            "description": "State, county, province, or region.",
            "example": "TX"
          }
        },
        "required": [
          "city",
          "country",
          "line1",
          "postalCode"
        ]
      },
      "BillingDetailsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "billingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardMethodResponse"
              },
              {
                "$ref": "#/components/schemas/UsBankAccountMethodResponse"
              }
            ]
          }
        },
        "required": [
          "name",
          "billingAddress",
          "paymentMethod"
        ]
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "orgId": {
            "type": "number",
            "example": 1
          },
          "plan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanResponse"
              }
            ]
          },
          "price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPriceResponse"
              }
            ]
          },
          "billingDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDetailsResponse"
              }
            ]
          },
          "isCancelAtPeriodEnd": {
            "type": "boolean",
            "example": false
          },
          "renewsAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the subscription renews.",
            "example": "2025-02-13T19:39:37.642Z",
            "nullable": true
          },
          "canceledAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the subscription was canceled.",
            "example": "2025-02-13T19:39:37.642Z",
            "nullable": true
          },
          "endsAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the ends.",
            "example": "2025-02-13T19:39:37.642Z",
            "nullable": true
          },
          "state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreePlanSubscriptionStateResponse"
              },
              {
                "$ref": "#/components/schemas/RegularSubscriptionStateResponse"
              }
            ]
          }
        },
        "required": [
          "id",
          "orgId",
          "plan",
          "price",
          "billingDetails",
          "isCancelAtPeriodEnd",
          "renewsAt",
          "canceledAt",
          "endsAt",
          "state"
        ]
      },
      "AdminOrgResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "name": {
            "type": "string",
            "example": "My org"
          },
          "description": {
            "type": "string",
            "example": "My description",
            "nullable": true
          },
          "website": {
            "type": "string",
            "example": "www.my-org.com"
          },
          "domain": {
            "type": "string",
            "example": "my-org.com"
          },
          "slug": {
            "type": "string",
            "example": "my-org"
          },
          "isAllowedForBeta": {
            "type": "boolean",
            "example": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true,
            "example": "https://liblab.com/images/logo.png"
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "openSourceProjectUrl": {
            "type": "string",
            "example": "https://github.com/liblaber/api",
            "nullable": true
          },
          "buildsCount": {
            "type": "number",
            "example": 1
          },
          "membersCount": {
            "type": "number",
            "example": 1
          },
          "remainingCredits": {
            "type": "number",
            "example": 1
          },
          "usedCredits": {
            "type": "number",
            "example": 1
          },
          "activeSubscription": {
            "$ref": "#/components/schemas/SubscriptionResponse"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "website",
          "domain",
          "slug",
          "isAllowedForBeta",
          "logoUrl",
          "createdById",
          "updatedById",
          "openSourceProjectUrl",
          "remainingCredits",
          "usedCredits"
        ]
      },
      "AdminPaginatedOrgResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminOrgResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "EditOrgRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Example Org"
          },
          "description": {
            "type": "string",
            "example": "Example Org Description"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "domain": {
            "type": "string",
            "example": "example.com"
          },
          "isAllowedForBeta": {
            "type": "boolean",
            "example": true
          },
          "logoUrl": {
            "type": "string",
            "example": "https://liblab.com/images/logo.png"
          },
          "remainingCredits": {
            "type": "number",
            "example": 19
          }
        }
      },
      "GroupApisByOrgIdResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My api"
          },
          "slug": {
            "type": "string",
            "example": "my-api"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "JobResponse": {
        "type": "object",
        "properties": {
          "buildId": {
            "type": "number",
            "example": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "JAVA",
              "PYTHON",
              "TYPESCRIPT",
              "CSHARP",
              "GO",
              "TERRAFORM",
              "SWIFT",
              "PHP",
              "DOC"
            ],
            "example": "TYPESCRIPT"
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "FAIL",
              "SUCCESS"
            ],
            "example": "IN_PROGRESS"
          }
        },
        "required": [
          "buildId",
          "type",
          "startTime",
          "endTime",
          "status"
        ]
      },
      "PaginatedOrgJobsResponseWithTotalCount": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobResponse"
            }
          },
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "total",
          "data",
          "count",
          "pages"
        ]
      },
      "BuildWithJobsResponse": {
        "type": "object",
        "properties": {
          "buildNumber": {
            "type": "number",
            "example": 1
          },
          "duration": {
            "format": "int64",
            "type": "integer",
            "example": 1,
            "description": "duration of build in milliseconds",
            "nullable": true
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "apiVersion": {
            "type": "string",
            "example": "1.0.0"
          },
          "apiName": {
            "type": "string",
            "example": "my api"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "IN_PROGRESS",
              "FAILURE"
            ],
            "example": "IN_PROGRESS"
          },
          "apiSlug": {
            "type": "string",
            "example": "my-api"
          },
          "id": {
            "type": "number",
            "example": 1
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobResponse"
            }
          },
          "user": {
            "example": {
              "firstName": "Doe",
              "lastName": "John",
              "email": "test@gmail.com"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildUser"
              }
            ]
          }
        },
        "required": [
          "buildNumber",
          "duration",
          "startTime",
          "endTime",
          "updatedAt",
          "createdById",
          "apiVersion",
          "apiName",
          "status",
          "apiSlug",
          "id",
          "jobs",
          "user"
        ]
      },
      "OrgBuildsFilters": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "example": [
              "FAILURE"
            ],
            "items": {
              "type": "string",
              "enum": [
                "SUCCESS",
                "IN_PROGRESS",
                "FAILURE"
              ]
            }
          },
          "createdByIds": {
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "versions": {
            "example": [
              "1.0.0",
              "1.0.0-snapshot"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "createdByIds",
          "versions"
        ]
      },
      "PaginatedOrgBuildsWithJobsResponseWithTotalCount": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildWithJobsResponse"
            }
          },
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "filters": {
            "$ref": "#/components/schemas/OrgBuildsFilters"
          }
        },
        "required": [
          "total",
          "data",
          "count",
          "pages",
          "filters"
        ]
      },
      "OrgBuildsGroupedByApiSlugResponse": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "my-api"
          },
          "name": {
            "type": "string",
            "example": "my api"
          },
          "builds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildWithJobsResponse"
            }
          },
          "count": {
            "type": "number"
          }
        },
        "required": [
          "slug",
          "name",
          "builds",
          "count"
        ]
      },
      "PaginatedOrgArtifactsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtifactResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "PaginatedOrgMemberResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgMemberResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "CreateOrgMemberRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "role": {
            "type": "string",
            "example": "MEMBER",
            "enum": [
              "ADMIN",
              "MEMBER",
              "SUPER_ADMIN"
            ]
          }
        },
        "required": [
          "userId",
          "role"
        ]
      },
      "UpdateManyOrgMembersResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "count"
        ]
      },
      "UpdateOrgMemberRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "example": "MEMBER",
            "enum": [
              "ADMIN",
              "MEMBER",
              "SUPER_ADMIN"
            ]
          },
          "orgId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateArtifactRequest": {
        "type": "object",
        "properties": {
          "artifactType": {
            "type": "string",
            "example": "DOC",
            "enum": [
              "SDK",
              "DOC",
              "LOG",
              "ZIP",
              "ENRICHED_SPEC",
              "ENHANCED_API_SPEC"
            ]
          },
          "buildId": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "enum": [
              "IN_PROGRESS",
              "FAIL",
              "SUCCESS"
            ]
          },
          "bucketName": {
            "type": "string"
          },
          "bucketKey": {
            "type": "string"
          }
        },
        "required": [
          "artifactType",
          "buildId",
          "bucketName",
          "bucketKey"
        ]
      },
      "ArtifactStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "enum": [
              "IN_PROGRESS",
              "FAIL",
              "SUCCESS"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateSdkRequest": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "example": "JAVA",
            "enum": [
              "JAVA",
              "PYTHON",
              "TYPESCRIPT",
              "CSHARP",
              "GO",
              "TERRAFORM",
              "SWIFT",
              "PHP"
            ]
          },
          "fileLocation": {
            "type": "string",
            "example": "https://my-file.location"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "artifactId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "language",
          "fileLocation",
          "version",
          "artifactId"
        ]
      },
      "CreateDocRequest": {
        "type": "object",
        "properties": {
          "fileLocation": {
            "type": "string",
            "example": "https://example.com"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "artifactId": {
            "type": "number",
            "example": 1
          },
          "apiId": {
            "type": "number"
          },
          "previewSlug": {
            "type": "string"
          }
        },
        "required": [
          "fileLocation",
          "version",
          "artifactId",
          "apiId",
          "previewSlug"
        ]
      },
      "DocCreatedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "accepted"
            ],
            "example": "accepted"
          },
          "docId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "status",
          "docId"
        ]
      },
      "DocDownloadResponse": {
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string",
            "example": "https://docs.liblab.com/liblab/preview/16135595-a691-4f9c-aa8b-d0a5504283e6"
          }
        },
        "required": [
          "downloadUrl"
        ]
      },
      "UpdateDocRequest": {
        "type": "object",
        "properties": {
          "fileLocation": {
            "type": "string",
            "example": "https://example.com"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          }
        }
      },
      "HubSpotFromFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "test-name"
          },
          "value": {
            "type": "string",
            "example": "test-value"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "HubSpotFromDto": {
        "type": "object",
        "properties": {
          "fields": {
            "example": [
              {
                "name": "test-name",
                "value": "test-field"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubSpotFromFieldDto"
            }
          }
        },
        "required": [
          "fields"
        ]
      },
      "CheckoutLinkResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://buy.stripe.com/aJYbUA2wz5DKp3g4lm"
          }
        },
        "required": [
          "url"
        ]
      },
      "SubscriptionOverviewResponse": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "number",
            "example": 1
          },
          "orgName": {
            "type": "string",
            "example": "liblab"
          },
          "planId": {
            "type": "number",
            "example": 1
          },
          "planName": {
            "type": "string",
            "example": "Starter"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z",
            "description": "The date the subscription became active"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z",
            "description": "The date the subscription ended or will end"
          },
          "renewDate": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z",
            "description": "The date the subscription will renew"
          },
          "price": {
            "type": "number",
            "example": 1200
          },
          "billingInterval": {
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "example": "month",
            "description": "The billing interval of the plan"
          },
          "monthlyRecurringPrice": {
            "type": "number",
            "example": 1000,
            "description": "Month based price"
          },
          "status": {
            "type": "object",
            "example": "new",
            "description": "Revenue status of the subscription"
          }
        },
        "required": [
          "orgId",
          "orgName",
          "planId",
          "planName",
          "startDate",
          "endDate",
          "renewDate",
          "price",
          "billingInterval",
          "monthlyRecurringPrice",
          "status"
        ]
      },
      "SubscriptionsOverviewResponse": {
        "type": "object",
        "properties": {
          "monthlyRecurringRevenueAmount": {
            "type": "number",
            "example": 10000,
            "description": "The total amount of monthly recurring revenue"
          },
          "totalChurnAmount": {
            "type": "number",
            "example": 1000,
            "description": "The total amount of churned revenue"
          },
          "monthOverMonthGrowth": {
            "type": "number",
            "example": 0.0258,
            "description": "The rate of change = (totalNewMRR - totalChurnMRR) / totalMRR"
          },
          "activePlanSubscriptionCounts": {
            "type": "object",
            "example": {
              "Starter": 10,
              "Advance": 5
            },
            "description": "The number of active subscriptions per plan"
          },
          "statusCounts": {
            "type": "object",
            "example": {
              "churn": 5,
              "new": 2
            },
            "description": "The number of subscriptions per status"
          },
          "subscriptions": {
            "description": "List of subscriptions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOverviewResponse"
            }
          }
        },
        "required": [
          "monthlyRecurringRevenueAmount",
          "totalChurnAmount",
          "monthOverMonthGrowth",
          "activePlanSubscriptionCounts",
          "statusCounts",
          "subscriptions"
        ]
      },
      "OrgAndRoleMemberResponse": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "MEMBER",
              "SUPER_ADMIN"
            ],
            "example": "ADMIN"
          },
          "org": {
            "example": {
              "name": "test-org"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/OrgResponse"
              }
            ]
          }
        },
        "required": [
          "role"
        ]
      },
      "UtmParams": {
        "type": "object",
        "properties": {
          "utm_source": {
            "type": "string",
            "example": "linkedin"
          },
          "utm_medium": {
            "type": "string",
            "example": "social"
          },
          "utm_campaign": {
            "type": "string",
            "example": "ai-content"
          },
          "utm_content": {
            "type": "string",
            "example": "blog"
          },
          "utm_term": {
            "type": "string",
            "example": "rag-with-sdks"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "signupMethod": {
            "type": "string",
            "enum": [
              "GOOGLE",
              "DEFAULT",
              "GITHUB"
            ],
            "example": "DEFAULT"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "email": {
            "type": "string",
            "example": "someone@example.com"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Doe"
          },
          "isLiblabAdmin": {
            "type": "boolean",
            "example": true
          },
          "isLiblabFinanceAdmin": {
            "type": "boolean",
            "example": false
          },
          "isEnabled": {
            "type": "boolean",
            "example": true
          },
          "orgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgAndRoleMemberResponse"
            }
          },
          "utmParams": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UtmParams"
              }
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "MEMBER",
              "SUPER_ADMIN"
            ],
            "example": "ADMIN"
          },
          "isSubscribedToEmails": {
            "type": "boolean"
          },
          "auth0Id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "signupMethod",
          "updatedAt",
          "email",
          "firstName",
          "lastName",
          "isLiblabAdmin",
          "isLiblabFinanceAdmin",
          "isEnabled",
          "role",
          "isSubscribedToEmails",
          "auth0Id"
        ]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "someone@example.com"
          },
          "password": {
            "type": "string",
            "example": "Password123!"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "signupMethod": {
            "type": "string",
            "enum": [
              "GOOGLE",
              "DEFAULT",
              "GITHUB"
            ],
            "example": "DEFAULT"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "auth0Id": {
            "type": "string",
            "example": "auth0|123"
          }
        },
        "required": [
          "email",
          "password",
          "signupMethod",
          "auth0Id"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "signupMethod": {
            "type": "string",
            "enum": [
              "GOOGLE",
              "DEFAULT",
              "GITHUB"
            ],
            "example": "DEFAULT"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "email": {
            "type": "string",
            "example": "someone@example.com"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Doe"
          },
          "isLiblabAdmin": {
            "type": "boolean",
            "example": true
          },
          "isLiblabFinanceAdmin": {
            "type": "boolean",
            "example": false
          },
          "isEnabled": {
            "type": "boolean",
            "example": true
          },
          "orgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgAndRoleMemberResponse"
            }
          },
          "utmParams": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UtmParams"
              }
            ]
          },
          "isSubscribedToEmails": {
            "type": "boolean"
          },
          "auth0Id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "signupMethod",
          "updatedAt",
          "email",
          "firstName",
          "lastName",
          "isLiblabAdmin",
          "isLiblabFinanceAdmin",
          "isEnabled",
          "isSubscribedToEmails",
          "auth0Id"
        ]
      },
      "GetUsersFilters": {
        "type": "object",
        "properties": {
          "orgIds": {
            "example": [
              {
                "label": "Org1",
                "value": "1"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterItemResponse"
            }
          }
        },
        "required": [
          "orgIds"
        ]
      },
      "AdminGetUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "signupMethod": {
            "type": "string",
            "enum": [
              "GOOGLE",
              "DEFAULT",
              "GITHUB"
            ],
            "example": "DEFAULT"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "email": {
            "type": "string",
            "example": "someone@example.com"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Doe"
          },
          "isLiblabAdmin": {
            "type": "boolean",
            "example": true
          },
          "isLiblabFinanceAdmin": {
            "type": "boolean",
            "example": false
          },
          "isEnabled": {
            "type": "boolean",
            "example": true
          },
          "orgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgAndRoleMemberResponse"
            }
          },
          "utmParams": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UtmParams"
              }
            ]
          },
          "buildsCount": {
            "type": "number",
            "example": 0
          },
          "isSubscribedToEmails": {
            "type": "boolean"
          },
          "auth0Id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "signupMethod",
          "updatedAt",
          "email",
          "firstName",
          "lastName",
          "isLiblabAdmin",
          "isLiblabFinanceAdmin",
          "isEnabled",
          "buildsCount",
          "isSubscribedToEmails",
          "auth0Id"
        ]
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "filters": {
            "example": {
              "orgIds": [
                {
                  "label": "Org1",
                  "value": "1"
                }
              ]
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/GetUsersFilters"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminGetUserResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "filters",
          "data"
        ]
      },
      "UpdateUserModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "someone@example.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "refreshTokenHash": {
            "type": "string",
            "example": "refreshTokenHash"
          },
          "isLiblabAdmin": {
            "type": "boolean",
            "example": true
          },
          "isLiblabFinanceAdmin": {
            "type": "boolean",
            "example": false
          },
          "isEnabled": {
            "type": "boolean",
            "example": true
          },
          "utmParams": {
            "$ref": "#/components/schemas/UtmParams"
          },
          "auth0Id": {
            "type": "string"
          }
        }
      },
      "EmailSubscriptionRequest": {
        "type": "object",
        "properties": {
          "isSubscribedToEmails": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "isSubscribedToEmails"
        ]
      },
      "PaginatedOrgResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "SnippetsResponse": {
        "type": "object",
        "properties": {
          "createdById": {
            "type": "number",
            "example": 1,
            "description": "the user who created the snippet id"
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "description": "the user who updated the snippet id"
          },
          "id": {
            "type": "number",
            "example": 1,
            "description": "snippet id"
          },
          "content": {
            "type": "string",
            "example": "todo adi",
            "description": "snippet map"
          },
          "buildId": {
            "type": "number",
            "example": 1,
            "description": "build that generated the snippets"
          }
        },
        "required": [
          "createdById",
          "updatedById",
          "id",
          "content",
          "buildId"
        ]
      },
      "CreateWorkflowsRequest": {
        "type": "object",
        "properties": {
          "apiId": {
            "type": "number",
            "example": 1
          },
          "workflowsSpec": {
            "type": "string",
            "format": "binary"
          },
          "outputName": {
            "type": "string"
          }
        },
        "required": [
          "apiId",
          "workflowsSpec"
        ]
      },
      "CreateWorkflowsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "outputName": {
            "type": "string",
            "nullable": true
          },
          "createdById": {
            "type": "number",
            "nullable": true
          },
          "updatedById": {
            "type": "number",
            "nullable": true
          },
          "remoteFileId": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "checksum",
          "outputName",
          "createdById",
          "updatedById",
          "remoteFileId"
        ]
      },
      "ValidateSpecRequest": {
        "type": "object",
        "properties": {
          "apiId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "apiId"
        ]
      },
      "FilePosition": {
        "type": "object",
        "properties": {
          "line": {
            "type": "number"
          },
          "character": {
            "type": "number"
          }
        },
        "required": [
          "line",
          "character"
        ]
      },
      "ViolationRange": {
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/FilePosition"
          },
          "end": {
            "$ref": "#/components/schemas/FilePosition"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "SpecValidatorViolationSchema": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "example": "error",
            "enum": [
              "error",
              "warning",
              "info",
              "hint"
            ]
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "range": {
            "$ref": "#/components/schemas/ViolationRange"
          }
        },
        "required": [
          "severity",
          "code",
          "message",
          "path",
          "range"
        ]
      },
      "SpecValidationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "apiId": {
            "type": "number",
            "example": 1
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "IN_PROGRESS",
              "FAILURE"
            ],
            "example": "SUCCESS"
          },
          "result": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecValidatorViolationSchema"
            }
          }
        },
        "required": [
          "id",
          "apiId",
          "startTime",
          "status"
        ]
      },
      "CreateTokenRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My token"
          },
          "scope": {
            "type": "array",
            "example": [
              "API",
              "DOC",
              "SDK",
              "BUILD",
              "ARTIFACT",
              "ORG"
            ],
            "items": {
              "type": "string",
              "enum": [
                "SDK",
                "DOC",
                "BUILD",
                "API",
                "ARTIFACT",
                "ORG",
                "WORKFLOWS"
              ]
            }
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "name",
          "scope"
        ]
      },
      "CreateTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "My token"
          },
          "token": {
            "type": "string",
            "example": "liblab_mySecretToken",
            "description": "Warning: only shown once, please save securely"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z",
            "description": "Defaults to 1 year from creation date"
          }
        },
        "required": [
          "id",
          "name",
          "token",
          "expiresAt"
        ]
      },
      "GetTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "My Token"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "scope": {
            "type": "array",
            "example": [
              "SDK"
            ],
            "items": {
              "type": "string",
              "enum": [
                "SDK",
                "DOC",
                "BUILD",
                "API",
                "ARTIFACT",
                "ORG",
                "WORKFLOWS"
              ]
            }
          }
        },
        "required": [
          "id",
          "name",
          "expiresAt",
          "scope"
        ]
      },
      "CreateOrgInvitationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "harry@liblab.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "InviteUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 481
          },
          "email": {
            "type": "string",
            "example": "jeremy@liblab.com"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "Jeremy"
          }
        },
        "required": [
          "id",
          "email",
          "firstName"
        ]
      },
      "InviteOrgResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 481
          },
          "name": {
            "type": "string",
            "example": "Liblab"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "InvitationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Invitation ID",
            "example": 12345
          },
          "inviter": {
            "description": "User that created the invitation",
            "example": {
              "id": 481,
              "email": "jeremy@liblab.com",
              "firstName": "Jeremy"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/InviteUserResponse"
              }
            ]
          },
          "recipientId": {
            "type": "number",
            "description": "ID of the invitation recipient",
            "example": 12345,
            "nullable": true
          },
          "org": {
            "description": "Organization that the user was invited to",
            "example": {
              "id": 812,
              "name": "Liblab"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/InviteOrgResponse"
              }
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the invitation",
            "example": "PENDING",
            "enum": [
              "PENDING",
              "REDEEMED",
              "ACCEPTED",
              "EXPIRED",
              "DECLINED",
              "REVOKED"
            ]
          },
          "email": {
            "type": "string",
            "description": "Email of the invited member",
            "example": "ron@liblab.com"
          },
          "message": {
            "type": "string",
            "description": "Message from the org admin to the invited member",
            "example": "Welcome to the organization!",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "inviter",
          "recipientId",
          "org",
          "status",
          "email",
          "message",
          "createdAt",
          "updatedAt"
        ]
      },
      "PaginatedOrgInvitesResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 10
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "Auth0ResetPasswordResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://auth.liblab.com/reset-password?ticket123"
          }
        },
        "required": [
          "url"
        ]
      },
      "VerifyPasswordResponseDto": {
        "type": "object",
        "properties": {
          "setupPassword": {
            "type": "boolean",
            "example": true,
            "description": "Indicates whether the user needs to set up a password."
          }
        },
        "required": [
          "setupPassword"
        ]
      },
      "PasswordSetupDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "The new password to set for the account.",
            "example": "P@ssw0rd123"
          }
        },
        "required": [
          "password"
        ]
      },
      "InvoiceResponse": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "number",
            "description": "The id of the subscription",
            "example": 1
          },
          "documentUrl": {
            "type": "string",
            "description": "The url of the invoice document",
            "example": "https://liblab.com/invoice/1.pdf"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date the invoice was created",
            "example": "2025-01-01T00:00:00.000Z"
          },
          "price": {
            "type": "number",
            "description": "The price of the invoice",
            "example": 1000
          },
          "currency": {
            "enum": [
              "usd",
              "credits"
            ],
            "type": "string",
            "example": "usd",
            "description": "The amount currency"
          },
          "paidAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date the invoice was paid",
            "example": "2025-01-01T00:00:00.000Z",
            "nullable": true
          },
          "status": {
            "enum": [
              "draft",
              "open",
              "paid",
              "uncollectible",
              "void",
              "retrying"
            ],
            "type": "string",
            "example": "paid",
            "description": "Status of the invoice"
          }
        },
        "required": [
          "subscriptionId",
          "documentUrl",
          "createdAt",
          "price",
          "currency",
          "paidAt",
          "status"
        ]
      },
      "OrgInvoicesResponse": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "number",
            "description": "The id of the organization",
            "example": 1
          },
          "invoices": {
            "description": "All invoices of the organization",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponse"
            }
          }
        },
        "required": [
          "orgId",
          "invoices"
        ]
      },
      "HealthCheckResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateTagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "tag"
          }
        },
        "required": [
          "name"
        ]
      },
      "ChatResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "example": "To create a user call userService.create method."
          }
        },
        "required": [
          "response"
        ]
      },
      "CreateUserFeedbackRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "title"
          },
          "message": {
            "type": "string",
            "example": "message"
          }
        },
        "required": [
          "title",
          "message"
        ]
      },
      "GetEventsFilters": {
        "type": "object",
        "properties": {
          "orgs": {
            "example": [
              {
                "label": "Org1",
                "value": "1"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterItemResponse"
            }
          },
          "events": {
            "example": [
              {
                "label": "USER_CREATE",
                "value": "1"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterItemResponse"
            }
          }
        },
        "required": [
          "orgs",
          "events"
        ]
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "eventType": {
            "type": "object",
            "example": "USER_INVITE_MEMBER"
          },
          "description": {
            "type": "string",
            "example": "event description"
          }
        },
        "required": [
          "id",
          "eventType",
          "description"
        ]
      },
      "UserEventsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "userId": {
            "type": "number",
            "example": 1
          },
          "eventId": {
            "type": "number",
            "example": 1
          },
          "event": {
            "example": {
              "eventType": "USER_CREATE",
              "description": "user create"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/EventResponse"
              }
            ]
          },
          "user": {
            "example": {
              "email": "someone@example.com",
              "firstName": "John",
              "lastName": "Doe"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              }
            ]
          },
          "orgId": {
            "type": "number",
            "nullable": true,
            "example": 1
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "example": 1
          },
          "eventData": {
            "type": "string",
            "nullable": true,
            "example": "ID 1"
          },
          "createdById": {
            "type": "number",
            "nullable": true,
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "nullable": true,
            "example": 1
          }
        },
        "required": [
          "id",
          "userId",
          "eventId",
          "event",
          "user",
          "orgId",
          "timestamp",
          "eventData",
          "createdById",
          "updatedById"
        ]
      },
      "PaginatedUserEventsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 1
          },
          "filters": {
            "example": {
              "orgs": [
                {
                  "label": "Org1",
                  "value": "1"
                }
              ],
              "events": [
                {
                  "label": "USER_CREATE",
                  "value": "1"
                }
              ]
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/GetEventsFilters"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEventsResponse"
            }
          }
        },
        "required": [
          "count",
          "pages",
          "data"
        ]
      },
      "EventUserPublishPrRequest": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "sdk": {
            "type": "string",
            "example": "My SDK"
          },
          "language": {
            "type": "string",
            "example": "typescript"
          }
        },
        "required": [
          "success",
          "sdk",
          "language"
        ]
      },
      "ThirdPartyApplicationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "orgId": {
            "type": "number",
            "example": 1
          },
          "auth0ClientId": {
            "type": "string",
            "example": "123abc"
          },
          "name": {
            "type": "string",
            "example": "third party application"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-02-13T19:39:38.957Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-02-13T19:39:38.957Z",
            "nullable": true
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          }
        },
        "required": [
          "id",
          "orgId",
          "auth0ClientId",
          "name",
          "createdAt",
          "updatedAt",
          "createdById",
          "updatedById"
        ]
      },
      "GetOrdThirdPartyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "orgId": {
            "type": "number",
            "example": 1
          },
          "auth0ClientId": {
            "type": "string",
            "example": "123abc"
          },
          "name": {
            "type": "string",
            "example": "third party application"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-02-13T19:39:38.957Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-02-13T19:39:38.957Z",
            "nullable": true
          },
          "createdById": {
            "type": "number",
            "example": 1
          },
          "updatedById": {
            "type": "number",
            "example": 1,
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "example": "123abc"
          }
        },
        "required": [
          "id",
          "orgId",
          "auth0ClientId",
          "name",
          "createdAt",
          "updatedAt",
          "createdById",
          "updatedById",
          "clientSecret"
        ]
      },
      "CreateThirdPartyApplicationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "third-party application"
          },
          "callbackUrls": {
            "example": [
              "http://localhost:3000/api/auth/callback"
            ],
            "description": "callback URLs to be called after authentication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logoUrl": {
            "type": "string",
            "example": "https://liblab.com/img/logo.svg",
            "description": "Link to the logo you want to display in the authentication form"
          },
          "orgId": {
            "type": "number",
            "example": 1,
            "description": "org to assign the application to"
          }
        },
        "required": [
          "name",
          "callbackUrls",
          "orgId"
        ]
      },
      "CreateIntegrationBuildDto": {
        "type": "object",
        "properties": {
          "sdkName": {
            "type": "string"
          },
          "languages": {
            "default": [
              "java",
              "python",
              "typescript",
              "csharp",
              "go",
              "terraform",
              "swift",
              "php"
            ],
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "java",
                "python",
                "typescript",
                "csharp",
                "go",
                "terraform",
                "swift",
                "php"
              ]
            },
            "example": [
              "typescript"
            ]
          },
          "userEmail": {
            "type": "string"
          },
          "liblabConfig": {
            "type": "object",
            "description": "JSON string that will be parsed into an object, e.g. {\"foo\": \"bar\"}"
          },
          "spec": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "sdkName",
          "languages",
          "userEmail",
          "spec"
        ]
      },
      "IntegrationBuildResponseDto": {
        "type": "object",
        "properties": {
          "buildId": {
            "type": "number",
            "example": 1
          },
          "apiId": {
            "type": "number",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "support@liblab.com"
          }
        },
        "required": [
          "buildId",
          "apiId",
          "email"
        ]
      },
      "SpecFixerResponseDto": {
        "type": "object",
        "properties": {
          "fileLocation": {
            "type": "string",
            "description": "Signed URL of the fixed spec file"
          }
        },
        "required": [
          "fileLocation"
        ]
      }
    }
  }
}